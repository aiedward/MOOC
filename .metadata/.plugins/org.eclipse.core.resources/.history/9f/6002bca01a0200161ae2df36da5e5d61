import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;


public class Tool {
	
	boolean endData=false;
	int page = 1;
	int index = 0;
	ArrayList<Integer> pagelist = new ArrayList<Integer>(); 
	Data courseData = new Data();
	
	public ArrayList<String> getVideoURL() throws IOException{
		
		FileInputStream inputFile = new FileInputStream("./courses_url_edX.txt");
		
		// Construct BufferReader from inputStreamReader
		BufferedReader fileReader = new BufferedReader(new InputStreamReader(inputFile));
		
		final ArrayList<String> urlList = new ArrayList<String>();
		
		String line = null;
		
		// read url line by line 
		while ( (line = fileReader.readLine()) != null){
			urlList.add(line);
		}
		
		fileReader.close();
		
		return urlList; 
		
	}
		
	/*
	 * End of get All url function
	 */
	
	/*
	 * creatDomRoot
	 * 
	 */
	
	
	org.w3c.dom.Document newCreatedDocument = null;
	
	synchronized public org.w3c.dom.Document createDomRoot(){
		System.out.println("----------------Root create-----------------");

		try {
			newCreatedDocument = DocumentBuilderFactory.newInstance()
					.newDocumentBuilder().newDocument();
		} catch (ParserConfigurationException e) {
			e.printStackTrace();
		}
		org.w3c.dom.Node root = newCreatedDocument.createElement("ROOT");
		newCreatedDocument.appendChild(root);
		return newCreatedDocument;
		
	}
	
	/*
	 * Crawl data.
	 * 
	 */
	
	public void crawlData(final String url, final Integer index){
		
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
				Connection connection;
				// connection time to 5 seconds 
				connection = Jsoup.connect(url).timeout(1000*5);
				
				
				// newCreatedDocument is destination of XML.
				NodeList nodelist=newCreatedDocument.getElementsByTagName("ROOT");
				Node root=nodelist.item(0);
				
				Document document = null;
				
				Data data = new Data();
				data.keyword = new ArrayList<String>();
				data.tag = new ArrayList<String>();


				try {
					document = connection.get();
				} catch (Exception e) {
				}
				
				data.url = url;
				
				Element head = document.getElementById("course-info-page");
				
				// course-id
				data.id = head.attr("data-course-id");
				
				// course title
				data.intro = head.select("h1.course-intro-heading").text();
				
				// course date
				data.date = head.select("div.course-start").text();
				
				Elements course_summary = document.getElementById("course-summary-area").children().first().children();
				
				for(Element element : course_summary){
					
					String attr = element.attr("data-field").toString();
					
					if( attr.equals("school")){
						data.school = element.select("a").text();
						
					}else if( attr.equals("subject")){
						data.subject = element.select("a").text();
						
					}else if (attr.equals("level")){
						data.level = element.select("a").text();
					}
					
				}
				
							
				// course title
				data.title = basic_info.attr("data-analytics-course");
				// course-id
				data.id = basic_info.attr("data-course-id");
				// course-url
				data.url = basic_info.attr("href");
				// course rating
				data.ratingValue = basic_info.attr("data-analytics-rating").toString();
				// course provider
				data.provider = basic_info.attr("data-analytics-provider");
				
						
				Elements metadata = body.select("div.course-info__academic").first().children();
				
				// course_instructors
				data.instructors = metadata.get(0).text();
				// providing school				
				data.school = metadata.get(1).text();
				
				// course_description
				try{
					data.description = metadata.get(2).text();
				}catch(Exception e){
					
					data.description = "no description";
				}
				
				
				
				
//				Elements description = metadata.get(2).select("p").text();
//				for (Element element : description) {
//					try{
//						data.description.concat(element.text());
//					}catch(Exception e){
//						data.description= " ";
//					}
//					
//								
//				}
				
				// making dom elements
				org.w3c.dom.Element course_info = newCreatedDocument.createElement("Course");
								
				root.appendChild(course_info);
				{
					
					// index
					org.w3c.dom.Element course_id = newCreatedDocument
							.createElement("course_id");
					course_id.appendChild(newCreatedDocument.createTextNode(data.id));
					course_info.appendChild(course_id);
					
					// title
					org.w3c.dom.Element course_title = newCreatedDocument.createElement("title");
					course_title.appendChild(newCreatedDocument.createTextNode(data.title));
					course_info.appendChild(course_title);
					
					// provider
					org.w3c.dom.Element course_provider = newCreatedDocument.createElement("provider");
					course_provider.appendChild(newCreatedDocument.createTextNode(data.provider));
					course_info.appendChild(course_provider);
					
					// rating
					org.w3c.dom.Element course_rating = newCreatedDocument.createElement("rating");
					course_rating.appendChild(newCreatedDocument.createTextNode(data.ratingValue));
					course_info.appendChild(course_rating);
					
					// instructor 
					org.w3c.dom.Element course_instructor = newCreatedDocument.createElement("instructor");
					course_instructor.appendChild(newCreatedDocument.createTextNode(data.instructors));
					course_info.appendChild(course_instructor);
					
					// school
					org.w3c.dom.Element course_school = newCreatedDocument.createElement("school");
					course_school.appendChild(newCreatedDocument.createTextNode(data.school));
					course_info.appendChild(course_school);
					
					
					// description
					org.w3c.dom.Element course_description = newCreatedDocument.createElement("description");
					course_description.appendChild(newCreatedDocument.createTextNode(data.description));
					course_info.appendChild(course_description);
					
					// url
					org.w3c.dom.Element course_url = newCreatedDocument.createElement("url");
					course_url.appendChild(newCreatedDocument.createTextNode(data.url));
					course_info.appendChild(course_url);
					
										
				}
			}
		}).start();
	}

	
}
