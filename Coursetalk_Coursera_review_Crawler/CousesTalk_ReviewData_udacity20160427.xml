<?xml version="1.0" encoding="UTF-8" standalone="no"?><ROOT><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>513</review_data_id><reviewer_name>Afref Fetter</reviewer_name><other_review_count>12</other_review_count><other_course_completed>12</other_course_completed><review_date>2012-12-01</review_date><review_value>8</review_value><review>Prior experience: Programming in Python for 3 years. Like: Manages to teach you quite a bit of Python in the short span of a few weeks. Also learned about python modules, specifically ones that allow you to communicate with the browser (necessary for a search engine). The forums (as always with Udacity courses) are excellent and the projects made by other students were amazing to see. Got to know how a search engine works. Dislike: Is more like "An Introduction to programming with Python" although it does touch on a few basic computer science topics. Overall: Take the course if you want to learn Python/how to make a search engine, but if you want a true introduction to computer science, you just might have to look elsewhere.</review><helpful_rate>7</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>764</review_data_id><reviewer_name>Lisa</reviewer_name><other_review_count>3</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-12-23</review_date><review_value>9</review_value><review>A fairly gentle introduction to Python - not so much computer science. Certainly no prerequisites are needed, perhaps excepting very basic algebra. Udacity's set up is fantastic, with very short videos interspersed with quizzes every 2 or 3 minutes. The interface looked a bit hackish when the quizzes appeared, and overall wasn't quite as polished as the offering from MIT on edx, but this wasn't much of an issue. Offering timetabled instances could be helpful for some as not all are well-suited to self-pacing.</review><helpful_rate>5</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>46</review_data_id><reviewer_name>SB</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-10-11</review_date><review_value>10</review_value><review>I took this course to help "re-learn" programming - I hadn't coded since undergrad about 6 years ago. Overall, I found the Udacity format to be awesome - I like that lectures are given in 2-3 minute spurts followed by quizzes that quickly test if you understand the concept. Overall this is a great intro to Python and programming, and I like how there is a project that you build across the whole course. I think this course is one of the best options to learn how to code for those who need a classroom-like environment. Some cons: * Coding in the browser isn't that fun. You miss some of the key features of an editor (easy indentation, color coding, tabbed completion, etc.). While it was nice that there was no requirement to install anything in the course (making it way easier for beginners) - I think an intro class should train students to use editors (and learn how to install a language). * Code quizzes and problems sets were too simple - Almost every solution to a quiz was less than 20 lines of code. While this was good in the beginning, the course should start preparing people to write larger code bases with multiple functions. * Few key concepts overlooked - No discussion of classes/OOP, debugging, intro algorithms like sorting</review><helpful_rate>5</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>742</review_data_id><reviewer_name>Eric</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-12-19</review_date><review_value>10</review_value><review>Great beginning Python course. I used it to very quickly prepare me for the other Python courses. (I wish there was a class like this for Java!) Highly recommended!</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>441</review_data_id><reviewer_name>nasser</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-02-14</review_date><review_value>10</review_value><review>This is an amazing course, when I take the course, I feel like that I play video games, there is a lot of fun, and you learn a lot, I definitely recommend it.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>265</review_data_id><reviewer_name>Ahmad Albaqsami</reviewer_name><other_review_count>9</other_review_count><other_course_completed>9</other_course_completed><review_date>2012-11-02</review_date><review_value>10</review_value><review>Great course on computer Science in general and Python in particular. The good thing was the "bite size" video lectures as well as the quizzes. Not only that, the course is continously being updated (they added a Unit 8, in addition to a few extra problem sets for the other units.. they keep you comming back for more!) Now, one shortcoming of the class (or some might consider it an advantage) is not using IDLE (program to run python offline) and thus not learning about external Input i.e. reading from files or taking input from the user. They did not cover a formal way to write docstrings for the functions (and I did not know of them until later on) That gap that was not filled by cs101 was fortunately covered by a Coursera course; Learn to program - The fundamentals with that said Udacity cs101 is a Great course. I have already recommended to a friend and he loves it! (He was taking the MIT EdX 6.00x offering and quit due to not being able to follow, he then started Udacity's cs101 and never looked back!) Another about the videos; the technology used is amazing! and the editing team did a great job of cutting out the "fat" in the material; Short and concise</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>94</review_data_id><reviewer_name>Gavin Conran</reviewer_name><other_review_count>25</other_review_count><other_course_completed>25</other_course_completed><review_date>2012-10-21</review_date><review_value>10</review_value><review>This course allowed me to learn Python in about 3 days allowing me to complete an assignment on a different course. The class is very well taught and the short, bite size lectures keep you engaged. The greatest complement is to be copied and I notice that the Scala class has partly taken the see through, moving hand format.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>1273</review_data_id><reviewer_name>Michael New</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-04-02</review_date><review_value>10</review_value><review>As someone who has taken a lot of online CS courses, this is definitely one of my favorites. The professor is fantastic (he grows on you as the course goes on), and the format is perfect. Lots of short segments with interactive quizzes, problems, etc. Because you're constantly answering questions or writing code, it would be almost impossible to make it through the course without really learning the material. It's important to understand what you'll get out of this course though. Some of the negative reviews are from people who were expecting one thing and got something else. The course isn't a Python course. It uses Python, and you'll learn a lot about it, but the professor intentionally keeps things simple with regards to the language itself. The course is also not so much about computer science as it is about logic and problem solving. Many of the problems you'll have to solve (especially the optional bonus problems) really are very challenging, even if the code you end up writing is only a few lines. After completing this course I found myself thinking more clearly and solving problems in more elegant, simple ways than I was before. If you're looking to learn more of the low-level details about computer science I'd recommend a course like Harvard's CS50 (which is excellent, but very different). But to gain a really solid foundation on how to program well I'd recommend this course over any other.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>89</review_data_id><reviewer_name>Damian Grant</reviewer_name><other_review_count>6</other_review_count><other_course_completed>5</other_course_completed><review_date>2012-10-21</review_date><review_value>10</review_value><review>This was the first MOOC I did, and luckily it was good enough to keep me coming back. I've programmed a fair bit before, although never had any classes. This was my first exposure to Python though. I was hoping for a bit more background on memory use etc, but I guess that doesn't fit with an entry level course. The quizzes etc were reasonably easy if you've done some programming before but I imagine they were aimed at a beginner audience. On the other hand, I found if I didn't keep up with the material regularly, I lost track of the various components of the search engine that we were building throughout the course. When it came to the exam I decided to leave out the 1 question relating to the actual search engine (the rest were general programming questions). On the other hand, I do appreciate that the course had a theme (building a search engine) that was gradually developed as the course went on.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>3035</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2013-08-23</review_date><review_value>10</review_value><review>Udacity's intro CS class is one of the best CS intros on the web. I've taken MIT 6.00, Harvard CS50, gone through Coursersa and LearnStreet intro courses and I'd say this one is the best in terms of actually learning how to program. The format of short instructional videos and quizzes on Udacity is the best format for learning CS on the web, when executed well (other than building/researching things yourself.). It should be noted that this course focuses mainly on learning Python and not on the theory of CS. I think for an intro CS class it’s okay to focus more on gaining confidence with the basic nuts and bolts of a language than actually getting into the nitty-gritty of CS itself. Intro courses offered by universities get more into CS theory, but spend less time on teaching you how to actually program, which can make them a bit frustrating and leave students feeling like they have to educate themselves on the programming side of things. This course is entirely self- contained: you don't need to go anywhere else or learn on your own to get through it. It also doesn't take too long to complete, so it is a perfect precursor to more theory-heavy classes that don't spend enough time on the nuts and bolts.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>2928</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-10-07</review_date><review_value>9</review_value><review>A great first outing from Udacity. The entire course is self-contained which makes it easy to get started. I love their approach of giving quizzes throughout the lecture, but they should replace some of the iffier multiple choice questions with more programming problems. Codecademy's course in Python might be a good supplement to this one if you'd like more practice. It's really easy to do all of the assignments right in the browser. That said, I wanted to be able to explore a new concept interactively as soon as it was taught. I understand that they want to keep it simple, but I really feel the class should have explained how to download and make use of Python's interactive interpreter, as well as its debugger. I would also recommend pythontutor.com to visualize the execution of programs. Although the class was pretty engaging overall, it did start off a bit slow for my taste. Especially when first starting out, I want a lot of visual examples and lots of feedback to show me the power and joy of computing. I would delay, for example, a discussion of abstract topics like Backus-Naur form until students are hooked. Get them doing and creating right away. The Khan Academy has some interesting ideas on that front and may be worth checking out if you're a newcomer to programming and want some visual examples. Once the class got rolling, though, the material was pretty absorbing. One of the best parts was seeing the search engine we were building take shape, although it was a bit disappointing that we never really put it into operation. I see that they've added new material after the final exam, covering classes, exceptions, and I/O. I really appreciate it, but that material should really be expanded upon. I hope to see a CS102 that helps students create larger programs using a wider range of data structures. Overall, Udacity is my favorite choice for online CS education, because the mix of videos, practice problems, and larger assignments make for a compelling experience. I hope they continue to hone their approach and round out their lineup, because I'll certainly be back.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>1313</review_data_id><reviewer_name>Dan</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-04-15</review_date><review_value>9</review_value><review>Dave Evans is an exceptional instructor. His teaching style and course design are well-suited to the MOOC. I took the course with the first cohort more than a year ago and have been inspired to continue to learn different applications of Python programming since. The course gave me a solid background to pursue other courses with Udacity (I've just completed my 5th) and is probably the best course I've taken. The modular design helps maintain momentum and the mini-quizzes posed throughout the modules using the in-browser Python interpreter were diverse enough to be not boring and repetitive, but repetitive and frequent enough to quickly bring my coding to fluency for the topics covered. Perhaps my favourite aspect of this course and all Udacity courses has to do with the lecture/assignment/exam structure. Compared to my university experience, I gained a lot more from spending the equivalent of an entire week completing a Udacity final exam, rather than cramming for a few days to spend three hours solving (or failing to) four or five problems in a typical engineering final exam.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>855</review_data_id><reviewer_name>Melinda Chen</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-01-10</review_date><review_value>9</review_value><review>This course was a great way to learn python and get started programming some basic functions. The core material was fairly easy, but the course did provide some harder "starred" problems for more advanced students. I liked that the videos were all around 1-6 minutes long - long enough to contain useful information, but not too long that it loses my attention. The video quizzes and subsequent explanations were also great for ensuring that I actually understood the content. My only complaint is that everything was done in the browser IDE. This made it really easy to jump right in to writing code, but it might be useful to also include a tutorial on how to write your own stand- alone programs outside of the course.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>704</review_data_id><reviewer_name>Raz</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2012-12-18</review_date><review_value>10</review_value><review>Very good introduction to python and strategies. Would highly recommend. The pace was nice and the content is good.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>546</review_data_id><reviewer_name>LA Bauserman</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-12-04</review_date><review_value>8</review_value><review>Enjoyed the lecture style of Dave Evans, I took the course to pickup some Python but brushed up on a lot of cs concepts in the process I hadn't used for awhile.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>535</review_data_id><reviewer_name>mooc</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-12-03</review_date><review_value>10</review_value><review>I liked this course a lot as it taught Python and then used that knowledge to make interesting things, such as a web crawler. I especially liked the cellular automaton question in the final exam. It felt great to be able to complete the questions on the exam that looked so hard at first.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>489</review_data_id><reviewer_name>Keith Thomas</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-11-30</review_date><review_value>9</review_value><review>Although you only gain the general knowledge of building a search engine rather than the ability to actually produce one, this class proves to be a brilliant introduction to computer science. Personally, I already had a good deal of experience programming so the only things I learned were small snippets of python knowledge, but it was a great refresher. I would recommend to any looking to jump into the world of computer science.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>447</review_data_id><reviewer_name>Youssef Souissi</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-11-29</review_date><review_value>10</review_value><review>Amazing course. Great introduction to programming that was of great help in understanding the basics (loops, logic, assignements...) and learning other languages such as Javascript. The search engine project / exercise was also a clever and fun way to exercise beyond the short sometimes meaningless programming problems. YS</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>115041</review_data_id><reviewer_name>Pramod Yadav</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2015-11-02</review_date><review_value>8</review_value><review>This is one of those courses which makes you learn things beyond what is being taught. Instructor is really clear, precise, and funny at times. Problems are structured to make the student think. I enjoyed this course. Udacity as a platform is really great and supplements the learning experience.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>71307</review_data_id><reviewer_name>Igor Todorovic</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2015-02-20</review_date><review_value>10</review_value><review>An exellent course for for someone who wants to learn programming. Lot of small problems to solve. Dave Evans is perfect instructor and Python is exellent choice for beginner.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>61372</review_data_id><reviewer_name>Arash Pourhabibi-Zarandi</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-12-24</review_date><review_value>10</review_value><review/><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>60351</review_data_id><reviewer_name>Christian Rømer Thulstrup</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-11-17</review_date><review_value>8</review_value><review>A very great course to learn basic python. It is best if combined with a follow up course</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>41209</review_data_id><reviewer_name>José Luis Fernández Barros</reviewer_name><other_review_count>8</other_review_count><other_course_completed>8</other_course_completed><review_date>2014-07-11</review_date><review_value>10</review_value><review>This is a must in computer science MOOCs. You will love programing and you will fall in love with Python. Quizzes are not too difficult, but you have some challenging exercises that will really squeeze your brain. Great forum, you will learn a lot from other students (no top secret about solutions as in other courses).</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>30949</review_data_id><reviewer_name>Dmitriy Alexeev</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-05-07</review_date><review_value>10</review_value><review>I took the course 2 years ago. Just want to do justice to the course and instructor Dave Evans. It was a real pleasure. Dave is one of the best teacher I saw. Now after two years I feel very pleased that I remember how search engine works and that I can create the one by myself.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>4733</review_data_id><reviewer_name>Brian Schuster</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2013-12-31</review_date><review_value>8</review_value><review>This course gave me a good primer to python and taught me some clever ways to interact with websites. The subject matter did get a little over my head by the end, so much so that when I stopped taking the class and returned a month later, the subject I was studying seemed foreign. If you're interested in a class that will teach you python well, I would recommend 'Learn Python the Hard Way', a free class taught by Zed Shaw.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>3915</review_data_id><reviewer_name>Bala Krishnan</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-11-17</review_date><review_value>10</review_value><review>I think this is the best way to learn to think like a programmer because programming exercise given in this course are well made. For example writing a program for crawling a web, sorting the crawled links using Quick sort algorithm and other programs like simulating Cellular automaton‎.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>3731</review_data_id><reviewer_name>vaggelas</reviewer_name><other_review_count>28</other_review_count><other_course_completed>26</other_course_completed><review_date>2013-11-08</review_date><review_value>10</review_value><review>This was one of the first Moocs that i finished.It is a very nice course,from a nice instructor on a very good platform. It is about programming with Python(i think 2.7 but it s been a while and i am not so sure) It starts from scratch and with lots of videos and quizzes it tries to build a fundamental knowledge of python. It is an introductory course but you end up with a very adequate level. I am trully recommend it to anyone that wanna learn python with also the Codecademy Python Track Pros : Self-Paced , Nice Instructors , Forums are helpful , No prereqs , UDACITY is a nice platform for programming courses , You can take an more advance class the minute you finish this cause every course is always provided Cons : Maybe they could add some more python things even as optional or as part II , There were a few(2-3) bugs in some quizzes at least when i took the course ,</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>3307</review_data_id><reviewer_name>Alex Hawkins-Hooker</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2013-09-26</review_date><review_value>9</review_value><review>I had no prior experience with programming and found this an easier and more engaging introduction than "Learn to Program: the Fundamentals" on Coursera, which I now hope to go back to to cover some of the theoretical ground skipped over by Udacity. Udacity's lecture format and interface is superb, and lend themselves superbly to this sort of introductory course - there's no way you'll ever find yourself lost or left behind. It's great that you can take the course at your own pace. The fact that everything you learn is directed to building a search engine keeps the course very engaging - you never feel like you are bogged down in theory or abstraction, which suited me as a beginner. The biggest problem is simply that the quizzes and homeworks are typically too easy, and don't require substantial individual work to complete. That said, it is very rewarding to be able to write your own code to quickly solve problems, and I'll undoubtedly leave this course feeling that programming is fun, which I hadn't really expected.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>3281</review_data_id><reviewer_name>Justine Ivan</reviewer_name><other_review_count>15</other_review_count><other_course_completed>9</other_course_completed><review_date>2013-09-22</review_date><review_value>8</review_value><review>Self-paced. Perfect! For an introductory course, self-paced probably is the best. You don't want to shy away interested folks because of the speed or bore the fast-learners (or who already know what is what). Slowly, you get to the core of the coding in Python and you will definitely need to know what you are doing before moving on the the next stages, which I value very much.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>2752</review_data_id><reviewer_name>Jonathan Sundqvist</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-07-15</review_date><review_value>10</review_value><review>This is an excellent starting course which gives you a good foundation in the programming paradigm. After you've taken this course you can definitely head on to a more advanced understanding of programming. If you already have programmed before the more challenging problems will definitely keep you sweating a bit. So this course has pieces for everyone.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>1</course_id><course_title>Intro to Computer Science</course_title><school>In this introduction to computer programming course, you’ll learn and practice key computer science concepts by building your own versions of popular web applications. You’ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you’ll explore computer science basics, as you build your own search engine and social network.</school><review_data_id>2228</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-06-16</review_date><review_value>10</review_value><review>I started this with many years of scripting experience working with big-data, so I really like the idea of building a web crawler. This course was a true 'intro' level but also created a challenge in understanding programming concepts, sorting algorithms and why Google is a successful search engine. I really, really liked the interface... the course is really fun and simple to take: one interface for everything: quizzes, videos, instructor whiteboard and computer screen, python shell. Seriously, I have never seen quality seamless integration of web training. It is like magic watching an embedded Youtube video and automatically transitions into interactive content and then a python shell.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>3707</review_data_id><reviewer_name>Sean</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-11-03</review_date><review_value>10</review_value><review>Pros: covers topics like HTTP, securely storing cookies and passwords, scaling websites Cons: No lessons on javascript and CSS coverage was very minimal. Overall, I thought this class was really well done and would recommend it to anyone looking to learn about web development.</review><helpful_rate>4</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>512</review_data_id><reviewer_name>Afref Fetter</reviewer_name><other_review_count>12</other_review_count><other_course_completed>12</other_course_completed><review_date>2012-12-01</review_date><review_value>10</review_value><review>Prior experience in the field: None Like: Get to learn how to make a fully- functional website, using Google App Engine. Steve Huffman does a great job teaching us about the dos and don'ts of making a website. Covers a lot of topics in sufficient details - from hashing passwords and secure logins to cookies. Got to implement all that we'd learned and end up with two blogs! Dislike: The lectures on using different APIs was pretty rushed. Limited to Google App Engine. Suggested improvements: Well, not really an improvement, but a follow-up course would be great. Overall: An excellent course to learn the finer details of web applications, you'll leave with a fresh feeling of accomplishment!</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>4590</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2013-12-17</review_date><review_value>9</review_value><review>Udacity's Web Development course provides a high quality introduction to back- end web development with Python using Google App Engine. The course is taught by Steve Huffman, creator of the Reddit, which gives him many unique insights about web development and scaling websites. If I were to give this course a grade just based on the video lectures and quizzes themselves, it would be 5 out of 5, hands down. The video lectures are very well made and quizzes help reinforce the material without being too difficult. The class covers a wide range of topics including HTTP requests, basic HTML, getting user input, databases, user authentication, cookies, caching, scaling and APIs. The homeworks in this course all have to do with creating and deploying web applications using Google App Engine, primarily building and adding features to a blog. The homework, especially when you start building the blog, are a bit open-ended and probably more complex than the average student would be able to complete on their own. The lectures don't always provide all the things you need to know about Google App Engine to complete the assignments. Another annoying aspect of the homeworks is that Steve uses the Jinja2 templating engine in all his solutions, but he doesn't teach students how to use it. If you're willing to spend a lot of time doing outside reading (App Engine docs, Jinja2, etc.) , you might get through the homework on your own, but in the end I found it more effective to look at Steve's solutions and study how and why the worked.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>1314</review_data_id><reviewer_name>Dan</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-04-15</review_date><review_value>8</review_value><review>Where instructor Steve Huffman lacked in teaching experience, he made up for in enthusiasm, a natural and articulate delivery, and a frame of reference closer to beginners (temporally speaking) compared to potentially out-of-touch older professionals or tenured professors. Like any new instructor, you quickly adapt to his style of communication. The TAs in this course were extremely helpful, as were the forums. Prior to this course, I took CS101 with Udacity. I also had some programming background from engineering school more than six years ago. The 'story line' progression of the course associated with the development of an actual web application worked well to maintain momentum, and Steve's well-timed anecdotes on his personal trials and errors with Reddit and Hipmunk helped me bridge the conceptual gap of how what I was learning (and building) fits with the best and biggest new applications being developed today. Following the course, I applied my new back-end / database skills and created a simple photo album application for a personal website, complete with administration login and content editing forms. (postnostills.appspot.com). Also, I tended to get stuck on very basic aspects of running programs that are really only learned by trial and error. For example, things like command-line syntax to roll back an application took me hours to figure out -- simply missing quotation marks or incorrect ordering of commands. These beginner errors are the type of momentum killers that experienced users simply don't remember making. The one criticism I have was how quickly the material in the later units was covered. The beauty of the MOOC format is there aren't the same time-restrictions as in other institutions (save those of the instructors taking sabbaticals to contribute to this world-changing education movement) so go ahead and keep adding material.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>48</review_data_id><reviewer_name>SB</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-10-11</review_date><review_value>8</review_value><review>I'm almost done with this course and I'm quite happy with it. I just started web development so I'm not certain if its missing anything but it seems to cover most of the building blocks of a web application: * HTML / CSS * Templating engine (jinja2) * HTTP requests * Basic web framework (webapp2) * Deploying using Google App Engine I like that it has a good mixture of theory and practical advice. Steve Huffman pulls out a lot of anecdotes from Reddit to help illustrate common problems with scaling and building a web app. Overall I'm pretty happy - I have been able to ramp up on web apps without any web background. However, the technologies used (GAE / wepapp2) are probably not want what you want to use to deploy your own web app. It'd be nice if he taught more commonly used frameworks (Flask, Django) and deployment options (AWS, Heroku) but that probably would not work for an intro course. Note that those coming from CS101 on Udacity with no prior programming background will have some issues. Specifically, you write your code in your environment, there is less hand holding (you have to pick up a few libraries on your own and have to Google), and also he uses classes which aren't explained in 101. I'd advise working on a mini-project or two in Python before you jump into CS253.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>54207</review_data_id><reviewer_name>D L</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-09-10</review_date><review_value>6</review_value><review>I'm a database guy with about 10-12 years' experience developing web applications in 4D, which has its own IDE and web server. This course is an opportunity to learn a great deal about using Python and Google App Engine. Steve's discussions of the problems encountered in scaling web applications are also an eye opener. Most of the complexity of the course had to do with learning how to work the Google App Engine. The core code used in the examples may not be applicable to other / real-world circumstances. The "draw-on-the- whiteboard" approach used in the video lectures was somewhat distracting. I prefer a lecture style like Stanford CS193, where the presenter has fully- legible media, and there isn't a pair of hands waving over the material. The whiteboard quizzes were somewhat arbitrary, and asked for material that Steve hadn't yet presented. Occasionally it appeared that Steve himself had not yet decided what the correct answer(s) should be. Other quizzes used a Python interpreter that was very helpful for testing code. The final was discouraging. My project seemed to be fully functional but the machine grader would not pass it, always returning a cryptic message. I spent hours inserting debug statements, reading logs, reading posts online, even running a proxy, but got nowhere. Because there is no IDE -- you are working solely with text files and logs -- there's no code trace to see what's going on. It's great that this course is available online, for free, and it's obvious Steve put much thought and effort into creating it.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>7198</review_data_id><reviewer_name>Matthias Faller</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-03-10</review_date><review_value>10</review_value><review>Excellent course with a great instructor. You have to be motivated to do some extra work as some topic are used in the course but covered only superficial. Like the templating. If you are willing to do so, you learn a lot. For grading, you write your own application in Google App Engine and submit the URL which start a automatic grading. At the end you have written a basic blog an basic wiki in GAE.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>7152</review_data_id><reviewer_name>Diego Rosado</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-03-03</review_date><review_value>10</review_value><review>Though I already had some ideas regarding the web and the http protocol this course gave me some good insights on the technology and how to organize web app to make them scalable</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>3916</review_data_id><reviewer_name>Bala Krishnan</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-11-17</review_date><review_value>10</review_value><review>Learning about the web from the founder of Reddit.com and Hipmunk.com gave me a great experience, inspiration and understanding about the web in real world.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>2927</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-10-07</review_date><review_value>9</review_value><review>This might be the most directly useful class I've taken online. I'm continuing to use code that I wrote in this course for an actual website. I also enjoyed the opportunity to get some insight from Steve Huffman. He's pretty down-to- earth, so it felt less like taking a class with a typical professor, and more like learning from a really smart friend. On the plus side, that meant he didn't drone on about theoretical subjects, but on the downside, he sometimes quickly moved past topics that should have been explained in greater depth. If you're just coming out of CS101, you may find things a little difficult. Although the intro to HTML is quite slow at first, the pace accelerates. Be sure to read the Google App Engine "Getting Started" documentation because the class doesn't help you enough with that. (Why do instructors never devote much attention to mastering the development environment itself?) You may also want to do some outside study to supplement your understanding, possibly with the HTML/CSS or Python tracks at Codecademy. Despite some notable rough patches, the projects were extremely satisfying. If you complete them, you'll be well on your way to becoming a web developer.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>2920</review_data_id><reviewer_name>ashish bhutani</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-07-31</review_date><review_value>8</review_value><review>Best part: Taught by founder of Reddit; He gives lot of practical details. Refreshing change from hardcore proffs :) All assignments/projects are to be done on Google App Engine using Python. No need to spend any money to get a basic site up and running. Dislikes (not exactly): Definitely it leaves lot of things to be learn after completion. But gives a good start if one is beginner. And with so many web tech around, no 1 course can cover everything.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>2037</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-06-16</review_date><review_value>10</review_value><review>Highly informative. Excellent teaching. You will gain a significant amount of skills from taking this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>1950</review_data_id><reviewer_name>Gautam Tambay</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2013-06-13</review_date><review_value>10</review_value><review>I have no prior experience with web development, I'm 2 modules in (out of 7), and it's been great so far. The course has a great mix of theory and examples. I'm learning a lot.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>1407</review_data_id><reviewer_name>Chris Beard</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2013-04-27</review_date><review_value>10</review_value><review>No prior web-dev experience, but this covered all the basics I needed to get started. Prof explained topics well.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>1249</review_data_id><reviewer_name>Dave Adler</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2013-03-31</review_date><review_value>10</review_value><review>Always wanted to learn about web dev but im not from a computer science background but couldn't get a clear explanation until now. Just finished unit 2 but in love! Whenever i get a moment i am on there learning. Excellent teachers, excellent concept, the world is a better place because of courses like this!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>705</review_data_id><reviewer_name>Raz</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2012-12-18</review_date><review_value>10</review_value><review>Steve is not a teacher, he's a programmer. It took a bit to switch in my head coming from other courses. Once I did I loved this course the most. I did have to do more digging and investigating on my own and I think that is what helped me retain more information then anywhere else. What I mostly loved about this course is that it was based on real world examples. Once you're done you can go out and build your own app using everything you've learned. I also enjoyed learning about reddit and how it came to be.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>575</review_data_id><reviewer_name>Robert Komartin</reviewer_name><other_review_count>19</other_review_count><other_course_completed>16</other_course_completed><review_date>2012-12-10</review_date><review_value>10</review_value><review>For his first teaching attempt (as he kept repeating throughout the course), Steve H. gave us a mind-blowing real-life web development experience! Outstanding and warmly recommended!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>96</review_data_id><reviewer_name>Gavin Conran</reviewer_name><other_review_count>25</other_review_count><other_course_completed>25</other_course_completed><review_date>2012-10-27</review_date><review_value>9</review_value><review>Steve is a very engaging instructor and covered some complex techniques fully but succinctly. Having taken the SaaS class this Web App class allowed me to compare the pros and cons of using a framework like Rails with a no framework approach.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>6</course_id><course_title>Web Development</course_title><school>Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. “Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?” The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. In this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.</school><review_data_id>11</review_data_id><reviewer_name>Gerard O'Neill</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2012-09-18</review_date><review_value>8</review_value><review>CS253 Web Applications Engineering was pretty damn fun. I’ll admit that it was probably the easiest of the three courses that I’ve completed on Udacity, mainly because web development is my specialty. Still, I learned quite a bit. Like all Udacity courses, CS253 was taught using Python. To me, this was both good and bad. It was good because I love Python and because it exposed me to Google App Engine and programming websites in Python, which I had never done before. However, most people in the real world use frameworks on top of Python, such as Django or Flask, rather than Google App Engine’s webapp framework. That being said, I’m glad that the course was not taught in Django. I hate Django. Additionally, I’m sure that for students with no prior experience, learning MVC concepts and a specific framework in addition to everything else that had to be learned might be too much. For beginner programmers, I’d say that Steve Huffman made very good choices on what technologies would be used and focused on. Overall, I think the class was great. It was enough work for students to handle in seven weeks, and it was an amazing introduction to web development. For a seven-week online course, you can only really expect to get people’s feet wet and make them hungry to learn more, and I have no doubts that Huffman did a great job of doing both of those things. If anyone out there is debating on whether or not this course is worth taking, I can assure you that it is. If you’re a programmer looking to get into web development, a beginner programmer, or even a web developer who wants to try out new technologies, CS253 is an awesome class. It really goes to show you how much better a practical class is when it’s taught by a professional in the field, rather than someone with a PhD but not much real world experience.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>56</review_data_id><reviewer_name>Herman Sheremetyev</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-10-12</review_date><review_value>10</review_value><review>Not to take anything away from many of the quality courses available, but CS212 is probably the single best course on Udacity, Coursera and EdX combined (I've probably gone through about 20 courses on all these platforms so far). Watching Peter Norvig's solutions is a mind-expanding experience and I learned a ton from watching this course, several times over, and working through the problems. The videos are well paced, with lots of quizes in between, and always include the all-important solutions. Comparing my solutions to Peter Norvig's has been.. illuminating. The assignments are tough but fair, and solvable based on things you learned in the preceding lessons. I've been writing Python for years, both professionally and for side-projects, and I loved the style of the code shown in this class. Many educational resources drive you toward the typical over-engineered object oriented approach. While this class shows you beautifully functional Python that you probably didn't even know existed, peeling away all the silly layers of abstraction and getting down to the heart of each problem in a clear and direct manner, building up amazingly clean, testable and flexible solutions. If your first thought when you face a programming problem is to start writing a class then you'll probably be in for a shock. Otherwise I think you should be in for a real treat, as you get to watch a true master show you how to write great code. Big thank you to Peter Norvig for putting it together and I really hope he decides to offer another class soon. In the meantime I'll keep re-watching the videos from this class and finding new nuggets of awesomeness that are so plentiful within.</review><helpful_rate>11</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>1120</review_data_id><reviewer_name>abelard</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2013-03-11</review_date><review_value>10</review_value><review>This is the course that got me excited about learning programming. The course does not discuss theory at all but it will expose you to some advanced programming ideas like parsing and reflection, backtracking and search, logic programming, data interchange using JSON, and testing and profiling. This course is for people learning programming who are ready to leave the beginner's category. You don't need to know a lot of programming before taking this course, but be prepared to spend a significant amount of time on the assignments. The course is very accessible but very challenging. One of my favorite courses ever. Highly recommended.</review><helpful_rate>5</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>4957</review_data_id><reviewer_name>Alison Scott</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-02-05</review_date><review_value>8</review_value><review>This course is now self-paced and described as 'advanced'; I took it as a paced follow-up to CS101. Unlike the person who gave it 1 star above, I managed to complete it, without prior coding experience. I do have a maths background. I found it interesting, engaging and well-taught. I also found it very, very, very hard, and I put a great deal of time into it. But I'm doing other coding classes now and I keep finding that the things I learnt in CS212 are applicable to a whole range of problems. Is it the best course to take immediately after CS101? No, probably not. Is it worth doing at some point? Definitely.</review><helpful_rate>4</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>2926</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-10-07</review_date><review_value>8</review_value><review>I enjoyed the course, but I had mixed feelings about the level of instruction. The class can't seem to decide if it's for people with 7 weeks of programming experience or 7 years of programming experience. There are great nuggets of information throughout, but the instructor will often blow right by some pretty tricky stuff as though it's trivial to us. I also found some annoying bugs in the auto-grader and some unnecessary confusion in a few of the questions. Udacity does need a class on the Design of Computer Programs, but this really isn't it. I think this material would work better as a course in advanced techniques in Python. Lose some of the simpler stuff and spend more time explaining those techniques we're unlikely to have seen before. As it is, I had to pause the videos where the solution was shown because I often couldn't figure it all out by the time he moved on. Still, I did learn a number of new things, and I appreciate the exposure to entirely new approaches.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>1109</review_data_id><reviewer_name>Brock Sides</reviewer_name><other_review_count>10</other_review_count><other_course_completed>8</other_course_completed><review_date>2013-03-07</review_date><review_value>10</review_value><review>This is my favorite class I've taken so far at Udacity, and in terms of quality it's up there with Martin Odersky's Scala class at Coursera, though it is more difficult. The problem sets are very challenging. This is not a class for programming novices, though you don't need to be a Python expert. I just picked up the language as I went along. This class will stretch your mind, and make you a better programmer, no matter what language you program in.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>516</review_data_id><reviewer_name>Afref Fetter</reviewer_name><other_review_count>12</other_review_count><other_course_completed>12</other_course_completed><review_date>2012-12-01</review_date><review_value>10</review_value><review>Prior experience in the field: Programming in Python for 3 years, Udacity courses CS 101 &amp; CS 373. Like: Learned some amazing techniques (search techniques). Learned about the power of Python and its various libraries (collections, defaultdict, etc.) Being able to "generalize" a search algorithm to solve mundane puzzles and impressive sliding car ones (Unblock me, if you've heard of the android app) was amazing. Understood generators and for expressions in Python, thanks to some great explanations (not to mention wrappers). I feel these are very difficult to "get" by yourself. Peter Norvig is an excellent teacher who was very involved in the forums as well. Kudos to him! Dislike: Was not sure I really learned how to "design computer programs". But, now (6 months later) I'm thinking I have gained a better understanding of how it may have helped. Overall: An excellent course, but may not be for beginners. If you think you know enough to handle it (a solid knowledge of Python's various data structures should be a good start), then you MUST take this course.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>418</review_data_id><reviewer_name>Sai</reviewer_name><other_review_count>13</other_review_count><other_course_completed>13</other_course_completed><review_date>2012-11-23</review_date><review_value>10</review_value><review>I have been using Python for 5 years at work and in my personal projects but this course was truly an eye-opener: there are tons of ways that I was unaware of to use this powerful programming language to attack problems. It was a very pleasant experience to watch how elegantly Dr. Norvig uses Python to solve games and other computer science problems. I am sure that even more seasoned Python programmers than I would share this feeling with me after taking this course. If you are interested, you can watch Dr. Norvig's thoughts on MOOC in his TED talk at http://www.ted.com/talks/peter_norvig_the_100_000_student_classroom.html.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>12</review_data_id><reviewer_name>Gerard O'Neill</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2012-09-18</review_date><review_value>2</review_value><review>My full review is a bit too long for this website, but here's a synopsis of my thoughts: I was not impressed with this course at all. The professor obviously does not program any software that is maintained by other developers, because the quality of code that I saw in this course was absurd. The course was originally meant to be taken by students who had just completed Udacity's CS101, but it ended up being labeled as an "advanced" course because of all the complaints in the forums from students who weren't learning. Here is a concise list of things that I believe went wrong with this course: 1) Peter Norvig has a hard time teaching beginners 2) He is a researcher, not a developer 3) He is a researcher, not a teacher 4) He simply cannot write code that everyone can understand easily I wouldn't really recommend that anybody take this course, even if you program professionally. The amount of effort put into trying to understand Norvig is not really worth it. For my full review, feel free to check out my blog post on this course: http://grardb.tumblr.com/post/24312405759/review-udacity-cs212</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>73903</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-03-31</review_date><review_value>10</review_value><review>This course is now self-paced and described as 'advanced'; I took it as a paced follow-up to CS101. Unlike the person who gave it 1 star above, I managed to complete it, without prior coding experience. I do have a maths background. I found it interesting, engaging and well-taught. I also found it very, very, very hard, and I put a great deal of time into it. But I'm doing other coding classes now and I keep finding that the things I learnt in CS212 are applicable to a whole range of problems.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>61266</review_data_id><reviewer_name>brian c</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-12-17</review_date><review_value>10</review_value><review>This is hands down the best MOOC I've taken. Norvig walks you through a variety of complex problems that challenge even an advanced programmers taste. It helps you write good, efficient, code using some of Python's advanced features. I would not recommend this to someone who just took an Intro to CS course. Take this course after you have some solid programming experience (3-4 classes in)</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>59664</review_data_id><reviewer_name>Ah Choo</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-10-21</review_date><review_value>10</review_value><review># This course is a master class. def doCourse(you_like, you_are): if you_like == 'like programming' : do_it = True if you_like == 'lazy' : do_it = False if you_are &gt;= good : Peter_Norvig[0] += ' will test you!' if you_are &gt;= dumb : Peter_Norvig[0] += ' will teach you ;)' return do_it Peter_Norvig = ['Peter Norvig'] (good, dumb) = [1,0] you_like = 'like programming' #add value you_are = dumb #add value print Peter_Norvig if doCourse(you_like, you_are) else None</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>7497</review_data_id><reviewer_name>Enrico Bacis</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-04-03</review_date><review_value>10</review_value><review>Peter Norvig is one of the best instructors around and the course is exceptional. You'll learn difficult software concepts with ease.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>4167</review_data_id><reviewer_name>Xiang Ji</reviewer_name><other_review_count>10</other_review_count><other_course_completed>5</other_course_completed><review_date>2013-12-08</review_date><review_value>9</review_value><review>I quite wish coursetalk would enable a "comment" function so people would be able to discuss others' reviews. I'm not sure if Gerard O'Neill was trolling or not when he posted his one-star review. After reading through his original post on Tumblr I decided that he was in a large part just trying to get some attention(subconsciously or not) with an article filled with childish wordings (like "a slap in the face" and "firing" etc.) and incompetent reasonings(He is only 21 according to his personal information, after all). The only caveat: If you're a beginner then don't complain if you find the course too hard, just like don't complain if SICP is too hard to follow. Otherwise this is definitely a generally rewarding class.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>3734</review_data_id><reviewer_name>mike</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-11-08</review_date><review_value>10</review_value><review>This reminds me of Structure and Interpretation of Computer Programs. You need to have strong logic / math background otherwise you'll get lost easily. But all the programs are fun and challenging. And the best part is when you have your program submitted successfully and then you compare yours with Dr Norvig's and half the time get blown away by how succinct his programs are. I've been using python on and off and I thought I know how to use it properly. But this course has make me a much better python user. This course is definitely quite advanced if you just finished the basic intro to computer science using python class it would be not easy. However if you have hands on experience with programming (especially functional programming) this will be a very fun ride. For other people you'll have to work hard, re-watch the videos until you get it and follow along to build the programs from the ground up. Also download the free version of pycharm and use git to version control your program so you don't have to worry about losing your intermediate changes http://www.jetbrains.com/pycharm/download/ I give this course 9/10</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>3249</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2013-09-18</review_date><review_value>9</review_value><review>Design of computer programs is an awesome class for a novice to intermediate python programmer to learn some new tools and techniques. The biggest problem with this course is that Udacity originally promoted it as being the next step after CS 101. As a result, the initial offering of the class had a ton of newbies who quickly got lost in the new topics that Prof Norvig introduces in relatively rapid succession. Udacity has since recategorized the class as “advanced.” I’m not sure I’d necessarily call it advanced, but you should probably have more than just an intro course under your belt before attempting it unless are willing to work hard and slowly. You will do a lot of programming in this course, mostly in the context of creating and solving games like scrabble, boggle and poker. Topics and techniques covered include Python list comprehensions, generators, decorators, tuple unpacking, lambda expressions, regular expressions, testing, profiling and optimization. If that sounds like a lot to cover in a 7 week course, you’re right. This course is a lot of work and covers a lot of ground, but it will also teach you a lot.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>1513</review_data_id><reviewer_name>Jesse Spaulding</reviewer_name><other_review_count>4</other_review_count><other_course_completed>4</other_course_completed><review_date>2013-05-09</review_date><review_value>10</review_value><review>The course is structured such that you're given a coding challenge and after you attempt a solution Peter will give you his solution. While your code may work invariable Peter's solution is far more elegant and succinct. This is the best way to learn: try something yourself and only after you've struggled with it do you get alternative (and usually) better solutions. This is pure beautiful coding. You're building for simplicity and ease of understanding. Nothing overly complicated. If you like militantly following rules and being told exactly what to do this course is not for you. If you're willing to explore on your own and learn from a master coder it is.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>1318</review_data_id><reviewer_name>Dan</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-04-15</review_date><review_value>7</review_value><review>After completing Udacity's CS101 with the first cohort more than a year ago, I rode my brimming wave of enthusiasm into Peter Norvig's Design of Computer Programs. The difficulty level increased dramatically by the third unit, and I didn't have long or frequent enough blocks of time to dedicate to this course. As the difficulty of material increased, the amount of time I needed to grasp new concepts increased, and I quickly lost momentum by the fourth unit. This course is definitely not for beginners. Peter has a natural teaching style, but his delivery was at times simply well above my understanding. I also think the video editing is in some cases to blame, where too much 'dead air' is removed, making the rate of information delivery unnaturally high. Thinking objectively about the course setup, I gave it a 3.5 rating because it didn't properly describe the difficulty or required knowledge in the description, because of the abrupt increase in complexity in the third unit (a smoother trajectory would have done less damage to my morale), and because of the video editing mentioned above. That said, the setup of the course was as good as any other in terms of the short modules, frequent quizzes and interactivity, and Dr. Norvig's pleasant style of speaking that is easy to listen to. Now that I have completed a few more courses, and after reading some of the very positive reviews of this course, I've regained some inspiration to go back and try completing the remainder of this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>58</review_data_id><reviewer_name>Ben Haley</reviewer_name><other_review_count>5</other_review_count><other_course_completed>4</other_course_completed><review_date>2012-10-12</review_date><review_value>10</review_value><review>Peter taught me a new way to think about programming. His code is the most elegant I have ever read. Look at his 20 line implementation of a spelling corrector to get an idea of what real programming elegance can be. http://norvig.com/spell-correct.html Also the way that Peter broke down problems into relevant data structures and functions was simply beautiful. This class affects the way I code everyday.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>9</course_id><course_title>Design of Computer Programs</course_title><school>Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you’ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.</school><review_data_id>35</review_data_id><reviewer_name>Asif</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-10-11</review_date><review_value>8</review_value><review>Even though I have been developing for a while (though not in Python), I felt I learnt a few new things in the course. I would say this is an intermediate level course, definitely not for new developers. The main takeaway from this course is how he breaks down problems into smaller pieces so that they become easier to solve and think about. Unlike the other commenter, I actually felt the Peter Norvig was quite a good teacher.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>7151</review_data_id><reviewer_name>Diego Rosado</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-03-03</review_date><review_value>10</review_value><review>This is an awesome course. It explains the whole business canvas model from the very beginning. For me it was the first contact with the model and it was exactly what I was looking for at that precise time.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>3792</review_data_id><reviewer_name>Jeff Winchell</reviewer_name><other_review_count>91</other_review_count><other_course_completed>66</other_course_completed><review_date>2015-01-27</review_date><review_value>8</review_value><review>Really good short class that all entrepreneurs should take. He really hammers home the importance of talking to potential customers first before wasting a lot of time building the wrong product/business. He also has a pleasant delivery.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>2922</review_data_id><reviewer_name>Israel Gutiérrez</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-07-31</review_date><review_value>9</review_value><review>No prior experience in the topic. The course was quite good compared to others, the concepts well explained and the videos very well-done. This course deals with the concept of customer development and how to implement this methodology invented by Mr Blank. Everything is very nicely explained, with nice examples and nice forum interactions. I only missed a bit more practical component. The book is excellent.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>119090</review_data_id><reviewer_name>siddarth sen</reviewer_name><other_review_count>2</other_review_count><other_course_completed>1</other_course_completed><review_date>2016-03-05</review_date><review_value>10</review_value><review>This course is highly recommended. Came across it after a lot of searching. Content is great. Some things are still missing. Buying the book is a good idea</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>115451</review_data_id><reviewer_name>Nilesh Dalvi</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2015-11-11</review_date><review_value>10</review_value><review>Awesome content, Outstanding Delivery (feel like recording that voice and playing it again and again), Amazing and Simple Concepts illustrated so beautifully. Please also read 4 Steps to Epiphany, Startup Owner's Manual, Business Model Generation and Value Proposition Design. These are outstanding books. Fully recommended.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>43620</review_data_id><reviewer_name>Jose Adan</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-07-29</review_date><review_value>10</review_value><review>This course push me into Startup Mainstream and it clear all assumptions i had about Lean Methodologies. Steve Blank is a master. I'm really thankful for this knowledge.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>2911</review_data_id><reviewer_name>Fares Ghandour</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-07-29</review_date><review_value>8</review_value><review>Solid structure, solid concepts that are at the core of building any startup. Namely, Customer Segmentation, Value Proposition, and Market Type are the most important emelemts in this course. Focuses a bit too much in the lean startup methodology of finding customers, that oversimplifies the process a bit especially if you are building a physical product or providing a physical service. The example Startup Steve Blank uses is kind of bad. Otherwise, i think this is an absolutely essential course for anyone in the startup domain to take, be they founders or otherwise,</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>2690</review_data_id><reviewer_name>makoto_inoue</reviewer_name><other_review_count>8</other_review_count><other_course_completed>7</other_course_completed><review_date>2013-08-22</review_date><review_value>8</review_value><review>I am still at lesson 2 of the course. I am currently organising study group with my colleagues. I found his emphasis on business model canvas is useful. I just created one and going to keep updating for my project. If you are interested, you can search content subtitles and see my notes at http://benkyoplayer.com/courses/10</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>1209</review_data_id><reviewer_name>Melinda Chen</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-03-28</review_date><review_value>8</review_value><review>I think I would have gotten more out of this class if I were actually in the process of building a real start-up. The course is structured around a business model canvas and walks you through the different things you have to consider when forming your business plan. It really expects you to follow along, filling in your canvas with ideas that match your start-up idea (which I didn't have). Regardless, I still learned a lot about general start-up business concepts. Interesting class if you just want to learn about what goes into building a start-up, definitely recommended if you have an actual start- up in the works.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>863</review_data_id><reviewer_name>Sinmi Araoye</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-01-12</review_date><review_value>9</review_value><review>The class was very helpful in helping me refine my understanding of entrepreneurship. I particularly liked the introduction of the concept of the Lean launchpad as well as the business model generator. Also the graphics were very interesting and made watching the videos doable. Although, I would recommend more quizzes at short intervals to ensure that the students are able to participate better. I will miss having that first watch. I know I will take this class again when I am ready to launch a business.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>49</review_data_id><reviewer_name>Passfail-signal</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-10-11</review_date><review_value>10</review_value><review>Very solid course, textbook recommended for reference.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>143</course_id><course_title>How to Build a Startup</course_title><school>In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. The main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model. Building a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.</school><review_data_id>61271</review_data_id><reviewer_name>Test Test</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2014-12-17</review_date><review_value>5</review_value><review>testing coursecontent reveie</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>249</course_id><course_title>Intro to Artificial Intelligence</course_title><school>Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you’ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.</school><review_data_id>2568</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-06-21</review_date><review_value>10</review_value><review>The best way to get started in AI. Sebastian and Peter make complex concepts very easy to grasp. You need to be able to invest the time, but it is completely worth it.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>249</course_id><course_title>Intro to Artificial Intelligence</course_title><school>Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you’ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.</school><review_data_id>116783</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-12-16</review_date><review_value>6</review_value><review>It's not so much Intro to AI as Intro to fields that use AI. I expected the class to give a fairly solid basis of the material needed to expand on more complex subjects in later classes. Instead, if feels the goal of this class is to leave you with a shallow understanding of a lot of things AI is part of/tangential to.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>249</course_id><course_title>Intro to Artificial Intelligence</course_title><school>Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you’ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.</school><review_data_id>112296</review_data_id><reviewer_name>Zbyněk Zajíc</reviewer_name><other_review_count>18</other_review_count><other_course_completed>17</other_course_completed><review_date>2015-09-01</review_date><review_value>10</review_value><review>Very helpful overview into the principles of Artificial Intelligence. Fully recommended for beginners and also for non-beginners. Full of information with good homeworks.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>249</course_id><course_title>Intro to Artificial Intelligence</course_title><school>Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you’ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.</school><review_data_id>44308</review_data_id><reviewer_name>Jeff Winchell</reviewer_name><other_review_count>91</other_review_count><other_course_completed>66</other_course_completed><review_date>2015-01-27</review_date><review_value>7</review_value><review>Having passed Stanford/Coursera's Machine Learning class and having done quite a bit of work before running out of time in Berkeley/edX's Intro to AI course, I was looking forward to seeing Sebastian Thrun's approach. It is a good compliment to those other two. Unfortunately I only got a third of the way through the course before Udacity went to the pay model for its MOOCs, so I didn't finish it.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>249</course_id><course_title>Intro to Artificial Intelligence</course_title><school>Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you’ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.</school><review_data_id>33881</review_data_id><reviewer_name>T. A.</reviewer_name><other_review_count>4</other_review_count><other_course_completed>4</other_course_completed><review_date>2014-05-28</review_date><review_value>10</review_value><review>I took the pre-Udacity version, Fall of 2011. Previous experience was nil. The experience led me since then to take another 20 or so MOOCs, of which I have completed about 15. Taking this was a lot of fun.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>249</course_id><course_title>Intro to Artificial Intelligence</course_title><school>Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you’ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.</school><review_data_id>1340</review_data_id><reviewer_name>Equanimous Creativity</reviewer_name><other_review_count>33</other_review_count><other_course_completed>32</other_course_completed><review_date>2013-04-20</review_date><review_value>10</review_value><review>This was my first MOOC and a very good one, nice introduction to the field of Artificial Intelligence.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>10</course_id><course_title>Artificial Intelligence for Robotics</course_title><school>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars. This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</school><review_data_id>2</review_data_id><reviewer_name>Jesse Spaulding</reviewer_name><other_review_count>4</other_review_count><other_course_completed>4</other_course_completed><review_date>2012-09-10</review_date><review_value>10</review_value><review>Taking this course from Sebastian was a pleasure. To start with he is exceedingly qualified to teach it. He was the director of Stanford's artificial intelligence lab and his team was the first to complete the 2005 DARPA grand challenge with their self driving car Stanley. He went on to lead the development of the Google self driving car. In this course you'll learn the core algorithms that power Google's self driving car. And you'll learn directly from the source. "That's pretty cool!" as Sebastien would say. The passion and enthusiasm that Sebastien has for the subject comes across in the videos and is infectious. The course is broken down into short video segments generally not more than 5 minutes. Plenty of quizzes and programming assignments are dispersed to keep you engaged and make sure you're learning. Growing up I was a huge fan of Legos and my favorite thing happened to be building cars. I love machine learning, I love designing things, I love building things, and if you're like me you'll love this course. My idea to make this course even cooler - create some kind of virtual world where students can deploy their own code to test in a simulated self driving environment. Perhaps even create a race or competition. Or alternatively, provide instructions for creating your own miniature self driving car for testing in your living room.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>10</course_id><course_title>Artificial Intelligence for Robotics</course_title><school>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars. This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</school><review_data_id>3601</review_data_id><reviewer_name>Maciej Pilichowski</reviewer_name><other_review_count>9</other_review_count><other_course_completed>9</other_course_completed><review_date>2013-10-28</review_date><review_value>8</review_value><review>This course has all the ingredients, it is interesting, fun etc and generally I recommend it, but there is one flaw -- not enough depth, the course is too easy, and second, there is too big promise ("building robotic car"). After finishing the course I know how the small pieces work, but I still couldn't put them together to make something useful.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>10</course_id><course_title>Artificial Intelligence for Robotics</course_title><school>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars. This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</school><review_data_id>550</review_data_id><reviewer_name>Chad Colgur</reviewer_name><other_review_count>7</other_review_count><other_course_completed>7</other_course_completed><review_date>2012-12-05</review_date><review_value>8</review_value><review>Prof. Thrun has a really engaging presentation style. It helps that he is one of the foremost accomplished practitioners in the field with an exhibit in the Smithsonian no less. You know you're learning from the best. The course was almost exactly what I expected. I might have wanted a bit more "starter code" for my own project but that expectation seems naive in retrospect. Anyway, the problem solving techniques are the important bits. The rest is too project- specific for a remote learning environment. It is difficult to imagine how this course could improve. Some people found the "utilitarian" approach to the mathematics a little distracting. You are asked to accept a few results on faith but that was never too difficult for me. I might have added a few links for the mathematically-inclined. I haven't taken it but there is another Udacity course on mathematical modelling. It might be the one on differential equations. I did quite a bit of that in my classical education so it will probably be a while before I go back to it. Perhaps it is an alternative for you. Some proficiency in Python would be useful for this course. I would also consider the Khan introduction to Linear Algebra, just so you are not seeing a matrix for the first time in this course. That said, the emphasis is on mastery at Udacity. You might want to use this course to drive your linear algebra learning.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>10</course_id><course_title>Artificial Intelligence for Robotics</course_title><school>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars. This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</school><review_data_id>68175</review_data_id><reviewer_name>Rachit Sapra</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2015-01-18</review_date><review_value>10</review_value><review/><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>10</course_id><course_title>Artificial Intelligence for Robotics</course_title><school>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars. This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</school><review_data_id>939</review_data_id><reviewer_name>Diego Allen</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-02-12</review_date><review_value>8</review_value><review>Great course, maybe a follow up that goes more in-depth in some topics might be useful. Also virtual environments to help visualize how the different algorithms behave as Jesse Spaulding suggested in another comment would be a way to improve this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>27542</course_id><course_title>How to Use Git and GitHub</course_title><school>Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course, *built with input from GitHub*, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub. This course is part of the Front End and Full Stack Nanodegrees..</school><review_data_id>59663</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-10-23</review_date><review_value>9</review_value><review>How to use Git and GitHub is a 3-week introductory course on the basics of the Git version control system. As a short course with only 3 lessons, it focuses on the giving students a solid grounding in the basics of Git and doesn't stray too far into any advanced topics. Lesson 1 covers version control in general, checking differences between files, commits, cloning, git log and getting Git set up on your computer. Lesson 2 covers basics of repositories, branches, merging and merge conflicts. Lesson 3 introduces GitHub and related commands and considerations including remotes, pushing, pulling, forking and issues that may arise due to collaboration. How to use Git and GitHub does exactly what a short intro level course should do: stay focused on covering the basics in detail without taking diversions into esoteric features that are likely to confuse students and distract them from forming foundation knowledge. Sarah and Caroline do a good job explaining things at a level and pace appropriate for an intro course. The course has a bit more reading embedded in the video playlist than most Udacity courses. Also, many of the quizzes require you to run commands on your computer and copy and paste output back into Udacity, which can be a bit troublesome. It would be nice if they had an interactive Git environment similar to Code School's allowing you to do everything you need to do right in the browser. Still, How to Git and GitHub is a great place to start if you are learning about Git for the first time.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>27542</course_id><course_title>How to Use Git and GitHub</course_title><school>Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course, *built with input from GitHub*, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub. This course is part of the Front End and Full Stack Nanodegrees..</school><review_data_id>117350</review_data_id><reviewer_name>M GH</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2016-01-06</review_date><review_value>10</review_value><review>The course is very well organized and everything makes sense. I have recently taken another Udacity class and it was like day and night. The git class is wonderful. The instructors know their stuff and they leave no lose ends.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>27542</course_id><course_title>How to Use Git and GitHub</course_title><school>Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course, *built with input from GitHub*, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub. This course is part of the Front End and Full Stack Nanodegrees..</school><review_data_id>75169</review_data_id><reviewer_name>Peter Kronfeld</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2015-05-29</review_date><review_value>10</review_value><review>I found this to be an excellent intro to git and GitHub. It is a fairly short course, only 3 lessons, but the material gets you familiar and comfortable with the basics. Instructor support in the forums was quick and effective. A minor pleasant surprise because I wasn't expecting that level of monitoring in a self-paced class. Another critical benefit was a focus on WHY to use git/GitHub, going beyond the mechanics of how-to. As a programming newbie I've had a few people recommend learning it, but really had no idea what the justification was. Now I do. There was a perfect balance of lecture and exercise. The resources they provide were excellent for getting hands-on experience. For instance, the Lesson 1 challenge to find the version that introduced a bug led to a deeper understanding of the actual process you'd go through using git. An ancillary (but really cool!) bonus are the instructions and files to customize your Terminal or Console: prompt color coding and git command tab completion. Trust me, you'll love it. Git and GitHub really shine when working in a collaborative environment. I'm not doing that yet, but I see the advantages even for an individual programmer. This course gives you valuable skills as a novice coder, and sets you up for working effectively in a collaborative environment.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>27542</course_id><course_title>How to Use Git and GitHub</course_title><school>Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course, *built with input from GitHub*, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub. This course is part of the Front End and Full Stack Nanodegrees..</school><review_data_id>72705</review_data_id><reviewer_name>Kevin Larsen</reviewer_name><other_review_count>4</other_review_count><other_course_completed>4</other_course_completed><review_date>2015-03-07</review_date><review_value>10</review_value><review>This is the best introduction to Git and GitHub I could find, and the course materials can be accessed for free. This course I would recommend to anyone that wants to learn version control, git, or github.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>461</course_id><course_title>Intro to Psychology</course_title><school>Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.</school><review_data_id>30536</review_data_id><reviewer_name>B Mohan Kumar</reviewer_name><other_review_count>12</other_review_count><other_course_completed>11</other_course_completed><review_date>2014-04-29</review_date><review_value>10</review_value><review>A fairly indepth course, well explained and self paced. The flow was also structured well till the end</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>461</course_id><course_title>Intro to Psychology</course_title><school>Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.</school><review_data_id>2681</review_data_id><reviewer_name>ujjwal</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2013-07-02</review_date><review_value>10</review_value><review>i have had no prior experience in the field of psychology and the course is presented in a very fun manner.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>461</course_id><course_title>Intro to Psychology</course_title><school>Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.</school><review_data_id>60902</review_data_id><reviewer_name>Sebastian Lobato Genco</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-11-24</review_date><review_value>9</review_value><review>Variety of subjects well explained in a very interactive and engaging way. Caution: This class is addictive.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>461</course_id><course_title>Intro to Psychology</course_title><school>Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.</school><review_data_id>3013</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-10-07</review_date><review_value>8</review_value><review>I'm enjoying Udacity's Introduction to Psychology, a very gentle overview of the subject. In some cases they've gone out of their way to come up with novel ways of making the material fun. For example, they conducted the Sense Olympics at Udacity HQ to demonstrate the limits of human perception. Like most Udacity classes, the lectures are interspersed with questions to keep you thinking. Unlike most Udacity classes, the homework assignments are just more quiz questions that do not ask you to go further with what you've learned. You don't really get a chance to "do" any psychology yourself. Nevertheless, for a fun survey of a great many topics in psychology, this one is worth checking out.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>11</course_id><course_title>Applied Cryptography</course_title><school>Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.</school><review_data_id>37</review_data_id><reviewer_name>Ruslan Bes</reviewer_name><other_review_count>9</other_review_count><other_course_completed>8</other_course_completed><review_date>2013-01-09</review_date><review_value>10</review_value><review>I took this course after the Dan Boneh's "Cryptography" class so I want to compare them a little bit. This class is much more practical than "Cryptography". What I mean by that is that this one has less proofs but a lot more application examples how Cryptography may be used in the filesystems, internet, in digital cash etc. This class has also harder but fun challenges. Just to give you an example — one of them is to hack at least 6 RSA ciphers from the 15 given and it took me couple of days to solve it. Experience with Python is almost a must. The final exam is maybe the best exam I ever had — it was as exciting as playing an adventure game and getting the final answer was like fighting the final boss :) So I highly recommend this course for anyone who deals with passwords and keys and security in his life but I also recommend it for anyone else just because it's a lot of fun.</review><helpful_rate>4</helpful_rate></Course-Reivew><Course-Reivew><course_id>11</course_id><course_title>Applied Cryptography</course_title><school>Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.</school><review_data_id>1902</review_data_id><reviewer_name>jledoux</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2013-06-07</review_date><review_value>9</review_value><review>Good course, my first udacity course (after taking several coursera ones). Loved the fact that I could just churn through it at my own pace (that is I finished the course in about one week). Best thing about the class were the challenge programming assignments and how he touched on very modern cryptographic concepts. Second best thing; unlike the coursera course, spends little to no time on formalism, but gets to interesting applications of crypto. So you don't learn about "semantic security" or "deterministic encryption" or the details of how symmetric encryption works (e.g., no Merkle- Damgard construction; no work through of AES). Instead, you get a good quick overview of stuff like if you had a symmetric block cipher here's how to combine it (CBC, CTR, CFB) mode, Diffie-Hellman, and (textbook) RSA. Then quickly jump into more advanced stuff like anonymous money (bitcoin), anonymous voting, anonymous routing (tor), blind signatures, breaking GSM, BEAST SSL attack, and secure multiparty communication. However, when going through many of these topics he doesn't always clearly define assumptions (who knows what information), threat model, power of attackers, etc. Worst thing about the class: vague quiz questions. First, all questions were videos reading a question to you aloud which is annoying format compared to being able to read the question with its assumptions explicitly on the same page as the answers when you try to answer. (Versus having to rewind). Next, the questions only accepted one answer, and were occasionally subjective, and even more rarely wrong (usually with an instructor's note at the bottom right of the page that's easy to miss). E.g., at one point the answer to three decimal digits was .327 and the system wouldn't accept "0.327" or "0.33", but you had to put in "0.32"; at another point a derivation there was a sign error and no options were correct. The answer often depends on unstated assumptions and that you have to watch a video to hear the question, versus seeing it written out with the assumptions actually spelled out. You just have to learn not to take the questions too seriously, and have no problem getting the vague/subjective ones wrong. Examples of bad questions include the first one in the course: "Which of these involve cryptology: Opening a door, playing poker, doing a google search, logging into udacity" (and the answer is all of them). I had skipped the intro video (where he spoke "opening a door with a key" (even though no key was written down) and that I'll buy when adding a key, that is cryptology. But playing poker does not by traditional definitions involve cryptology even though if it involves "secrets". Cryptology is the combination of cryptography (secret writing) and cryptanalysis (how to break cryptography without the key). Or another example, they do the standard proof by contradiction that there's no maximal prime and instead an infinite number. You first assume (wrongly) that you have a finite set of all primes. You multiply them all the primes together and add one to that (e.g., P = p1 p2 p3 ... pN +1) where p1 is the first prime, pN is the assumed maximal prime). At this point, the lecture stops and asks "is p prime?" Yes, No, or Maybe. The system would only accept "Yes" which has a perfectly logical argument (p is greater than the assumed largest prime pN; so it can't be prime as we've assumed all primes are smaller than pN). But you can also argue, that it must not have any divisors with your finite list of prime numbers (since p mod p_i = 1 for all p_i in your set and you would have p mod p_i = 0 work for some p_i if p was composite), and if a number is not divisible by any prime number less than itself, then it must be prime. So either option has a good argument behind it, but only one answer works. The problems involving the actual material often had similar issues from vaguness, poorly defined assumptions as well. Anyhow, overall great recommended course; take away 0.5 stars from vagueness of some questions and how assumptions about attacker/threat model were often left unstated.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>11</course_id><course_title>Applied Cryptography</course_title><school>Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.</school><review_data_id>425</review_data_id><reviewer_name>Damian Grant</reviewer_name><other_review_count>6</other_review_count><other_course_completed>5</other_course_completed><review_date>2012-11-24</review_date><review_value>9</review_value><review>I jumped into this course straight after Udacity's CS101 (was a big fan of Dave Evans after that one), and it was quite a jump in difficulty! I also took a few weeks off in the middle, and the lack of continuity for me made it difficult to get back into it. As with all Udacity's courses (that I've done so far) the quality of the lecture material in this course is excellent. The assignments were reasonable, except that each one had a challenge problem for which the answer wasn't provided. I managed to do the first of these, but then couldn't dedicate enough time to them over subsequent weeks to bother. This is obviously a personal choice, and a complete learning experience from this course would definitely involve the challenge questions. Just be prepared for a lot of work (and some fun, I'm sure) in solving them. People on the forums seemed to have spent days on these, but in return I'm sure they had some practical crypto skills at the end of the course, whereas I feel (some months after finishing it) that I only have an ideas of a few of the concepts. In the global Udacity meetup, Dave Evans said that Udacity is planning an intermediate level course to more effectively bridge the large gap between CS101 and this one; until then, you may want to try some of the other intermediate courses on Udacity before leaping into this one!</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>142</course_id><course_title>Intro to Theoretical Computer Science</course_title><school>This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.</school><review_data_id>3248</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2013-09-18</review_date><review_value>10</review_value><review>Introduction to theoretical computer science is all about identifying and tackling hard problems. The quality of the material and instruction is excellent. Sebastian Wernicke breaks down complex topics in a way that is easy to understand. Central topics include the P vs. NP question, NP completeness and strategies for dealing with NP-complete problems. The class uses a few related graph problems--vertex cover, independent set and clique-- to introduce and discuss the central topics. It also covers a few other interesting problems like traveling salesman and 3-SAT. As the name implies, this course is heavy on theory. As such, there is not a lot of actual programming you have to do to complete the course. There are a few programming problems, but quizzes and homework mostly revolve around multiple choice questions that get you to think about and master the concepts presented in lecture. Since it is light on programming, the course goes quickly if you don’t have to re-watch the lectures too many times to understand the material. Even though this class is about theory, you will learn practical things like preprocessing data to speed up algorithms. I highly recommend this course to anyone with curiosity about the P vs. NP question and solving hard problems.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>142</course_id><course_title>Intro to Theoretical Computer Science</course_title><school>This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.</school><review_data_id>88</review_data_id><reviewer_name>Damian Grant</reviewer_name><other_review_count>6</other_review_count><other_course_completed>5</other_course_completed><review_date>2012-10-21</review_date><review_value>10</review_value><review>I've completed about 4 MOOCs now, and this has been my favourite so far. I found it to be a solid "intermediate" level - both in terms of workload and difficulty. I found some of the quizzes - particularly the exam - needed multiple submissions to get right. I'm not sure if this suggests I didn't deeply understand the material after all. The problem sets usually included just 1-2 programming exercises, and only a few were really challenging. I thought the instructor was brilliant, and responsive to questions on the forums. In terms of content, obviously everyone will have different interests and background. I was expecting something a little different (more due to my ignorance as to what is "theoretical" and what is "practical" Comp Sci). It's a lot more mathematical than other CS courses. On the other hand, I haven't done any Algorithms courses (which was a recommended pre-req). As I say, it's early days yet for my MOOC education, but I hope there are other courses this good out there for me to discover!</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>142</course_id><course_title>Intro to Theoretical Computer Science</course_title><school>This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.</school><review_data_id>52</review_data_id><reviewer_name>Ruslan Bes</reviewer_name><other_review_count>9</other_review_count><other_course_completed>8</other_course_completed><review_date>2013-06-08</review_date><review_value>10</review_value><review>If you ever heard about "P vs NP" problem and didn't understood what is all about this is the course to take. After the first 4 units I finally grasped the idea behind these sets. Prerequisites: Abstract thinking. Graphs. Algorithms. Python. Although Python is required only if you are interesting in implementing algorithms. Videos: quite good. First units tell about three practical problems on graphs: clique, independent set and vertex cover and how they transform into each other. After that the units go to a more general problems and how solving general case may help solve those three tasks. What I've currently learned from the course: -Understood what is P, NP and NP- Complete sets and I'm even able to explain it to someone.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12745</course_id><course_title>Intro to Point &amp; Click App Development</course_title><school>This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code. By the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you’d want to develop.</school><review_data_id>74113</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-04-22</review_date><review_value>10</review_value><review>Great into class to the Salesforce platform. The title of the class should really be "Intro to Salesforce". It helps you become familiar with the layout of the point and click part of Salesforce and gives you a taste for what it is capable of. The instructors were easy to follow and interesting to listen to. The best thing about this course is that you can actively participate by building the same app as the instructors as you go along, which I find helps me to retain the info much better than just listening and watching. The thing to keep in mind is that this is an intro course. Of course they could dive deeper into the capabilities of the platform, but then I suspect the class would be hours longer. As someone who is brand new to Salesforce, I felt this was the perfect place to start. I now feel comfortable enough with it to start learning the more complex aspects.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12745</course_id><course_title>Intro to Point &amp; Click App Development</course_title><school>This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code. By the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you’d want to develop.</school><review_data_id>42717</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2014-07-26</review_date><review_value>10</review_value><review>It's a great introduction course. The previous reviews expected the introduction course to go beyond introduction which is improper. They way of teaching was amazing. Andy acted if he don't know anything about Salesforce and got to learn some basics as we all beginners did. The explanation and the clarity was above average and it was really fun to follow this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12745</course_id><course_title>Intro to Point &amp; Click App Development</course_title><school>This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code. By the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you’d want to develop.</school><review_data_id>4592</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-05-05</review_date><review_value>7</review_value><review>This class provides an overview of Salesforce, a software platform that lets you create applications in the cloud. Salesforce lets different groups of people like managers, employees, contractors and customers interact through web applications and gives the user a variety of tools for aggregating, crunching and displaying data. The course is presented in a novel format: Udacity's representative Andy assumes the role of the student and learns all the material at the same time as online learners. A representative from Salesforce, Samatha, teaches Andy step by step, which makes it easy for an online learner to follow a long and do everything that Andy is doing. I found that the format worked quite well. My main gripe with the course is that they could do a better job explaining how you would actually deploy and use a Salesforce App in real life. It would be nice if the course was a bit longer or if there was a follow up class that goes into more detail about using Salesforce and advanced features. I feel like they breezed through all the basics and just when things starting getting really interesting, the class ended.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12748</course_id><course_title>Data Analysis with R</course_title><school>Exploratory data analysis is an approach for summarizing and visualizing the important characteristics of a data set. Promoted by [John Tukey](http://en.wikipedia.org/wiki/John_Tukey), exploratory data analysis focuses on exploring data to understand the data’s underlying structure and variables, to develop intuition about the data set, to consider how that data set came into existence, and to decide how it can be investigated with more formal statistical methods. If you're interested in supplemental reading material for the course check out the Exploratory Data Analysis book. (Not Required) This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>29713</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-04-21</review_date><review_value>9</review_value><review>Exploratory data analysis is the third course released as a part of Udacity's new Data science focus area that launched at the beginning of 2014. The course provides an overview of using R to explore data and focuses heavily on the use of the ggplot2 package in R to create data visualizations. Although the course touches briefly on high-level theory and concepts like summary statistics, transforming data, correlation and linear regression, almost all of the quizzes and homework questions have to do with creating plots and making observations based on plots. This is not necessarily a bad thing--learning to plot in R is a valuable skill and an important part of exploratory data analysis--but it seems like the course should have spent a bit more time covering high-level concepts and numeric methods for exploring data like using tables and summaries. Despite that quibble, this is good course with a lot of high quality and practical content. It moves slowly enough for you to get comfortable with basic potting syntax before building up to more complex visualizations, but fast enough to keep you engaged. Be aware that the course mainly uses two data sets to teach the material: a data set of diamond prices and characteristics and set of pseudo Facebook data created by the instructors meant to mirror real Facebook data, such as friend counts, tenure on the site, user age and gender. Your enjoyment of the class will depend, in part, on your interest in the data.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>12748</course_id><course_title>Data Analysis with R</course_title><school>Exploratory data analysis is an approach for summarizing and visualizing the important characteristics of a data set. Promoted by [John Tukey](http://en.wikipedia.org/wiki/John_Tukey), exploratory data analysis focuses on exploring data to understand the data’s underlying structure and variables, to develop intuition about the data set, to consider how that data set came into existence, and to decide how it can be investigated with more formal statistical methods. If you're interested in supplemental reading material for the course check out the Exploratory Data Analysis book. (Not Required) This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>70058</review_data_id><reviewer_name>Heonkyu Jin</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2015-02-07</review_date><review_value>9</review_value><review/><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12748</course_id><course_title>Data Analysis with R</course_title><school>Exploratory data analysis is an approach for summarizing and visualizing the important characteristics of a data set. Promoted by [John Tukey](http://en.wikipedia.org/wiki/John_Tukey), exploratory data analysis focuses on exploring data to understand the data’s underlying structure and variables, to develop intuition about the data set, to consider how that data set came into existence, and to decide how it can be investigated with more formal statistical methods. If you're interested in supplemental reading material for the course check out the Exploratory Data Analysis book. (Not Required) This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>33313</review_data_id><reviewer_name>Kevin Zhu</reviewer_name><other_review_count>7</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-05-20</review_date><review_value>10</review_value><review>after I finish the course I will post suggestions. You will learn a lot about ggplot and some other package.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>514</course_id><course_title>Intro Algebra Review</course_title><school>This course provides a brief review of introductory algebra topics. Topics to be covered include integer operations, order of operations, perimeter and area, fractions and decimals, scientific notation, ratios and rates, conversions, percents, algebraic expressions, linear equations, the Pythagorean theorem, and graphing.</school><review_data_id>3769</review_data_id><reviewer_name>Robert Gonzalez</reviewer_name><other_review_count>10</other_review_count><other_course_completed>9</other_course_completed><review_date>2013-11-12</review_date><review_value>10</review_value><review>I took this course to sharpen math skills that I found lacking while struggling through another on-line class. I found the self-paced format of the course a real bonus. I successfully completed the class in less than two weeks. I strongly recommend this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>514</course_id><course_title>Intro Algebra Review</course_title><school>This course provides a brief review of introductory algebra topics. Topics to be covered include integer operations, order of operations, perimeter and area, fractions and decimals, scientific notation, ratios and rates, conversions, percents, algebraic expressions, linear equations, the Pythagorean theorem, and graphing.</school><review_data_id>3299</review_data_id><reviewer_name>errequeerre</reviewer_name><other_review_count>3</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-09-25</review_date><review_value>10</review_value><review>Let me state first off that I did not complete the course. But not because I got tired of it, quite the opposite. My school days, and my mathematical knowledge, are long past, and I wanted to revise some of that knowledge and possibly whet my appetite for more. This course helped me achieve both goals. Both instructors are excellent. Crystal-clear explanations presented in a way in which you feel you are gently taken to a full understanding of the points. And plenty of exercises on top of that. This being a basic course, I realized half-way through that I wanted to engage more, and I registered for a more time-demanding course in algebra. This course is excellent is you just want to acquire or revise basic algebra. And it made me see that I really wanted to learn beyond the syllabus offered in the course. I can only recommend it.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3373</course_id><course_title>Intro to the Design of Everyday Things</course_title><school>Everyone designs. Design occurs anytime you deliberately change an environment to make things better. When you decide what seat to take in an auditorium you’re designing your experience. When you rearrange the furniture in a room or draft an email, you’re designing. This course provides a summary of key concepts from the first two chapters of The Design of Everyday Things (Revised and Expanded Edition, November 2013) by Don Norman. It’s intended to be enjoyable and informative for anyone curious about design: everyday people, technical people, designers, and non-designers alike.</school><review_data_id>7020</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-02-11</review_date><review_value>9</review_value><review>A fun, short introduction to design of objects. My main complaint is that the course is quite so short and yet they want you to do fairly involved final project. The size of final projects should be proportional to the amount of material and effort put into the class before the final project. A course with only 8-9 hours of material shouldn't have a 7+ hours on a final project.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3373</course_id><course_title>Intro to the Design of Everyday Things</course_title><school>Everyone designs. Design occurs anytime you deliberately change an environment to make things better. When you decide what seat to take in an auditorium you’re designing your experience. When you rearrange the furniture in a room or draft an email, you’re designing. This course provides a summary of key concepts from the first two chapters of The Design of Everyday Things (Revised and Expanded Edition, November 2013) by Don Norman. It’s intended to be enjoyable and informative for anyone curious about design: everyday people, technical people, designers, and non-designers alike.</school><review_data_id>4825</review_data_id><reviewer_name>Jeff Winchell</reviewer_name><other_review_count>91</other_review_count><other_course_completed>66</other_course_completed><review_date>2015-01-27</review_date><review_value>10</review_value><review>The main instructor is a GOD of design. Udacity has rebuilt their messaging system to have a nicely functioning forum which this class is using.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>236</course_id><course_title>Intro to Parallel Programming</course_title><school>Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself. **Why It’s Important to Think Parallel** [Third Pillar of Science][1] Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery. [1]: http://www.youtube.com/watch?v=3DbAB2ChDBw</school><review_data_id>68803</review_data_id><reviewer_name>David Han</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2015-01-25</review_date><review_value>10</review_value><review>Quite an advanced course, going in depth with CUDA with a focus on optimisation. The assignments were challenging but fun.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>236</course_id><course_title>Intro to Parallel Programming</course_title><school>Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself. **Why It’s Important to Think Parallel** [Third Pillar of Science][1] Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery. [1]: http://www.youtube.com/watch?v=3DbAB2ChDBw</school><review_data_id>3599</review_data_id><reviewer_name>Maciej Pilichowski</reviewer_name><other_review_count>9</other_review_count><other_course_completed>9</other_course_completed><review_date>2013-10-28</review_date><review_value>9</review_value><review>This course was prepared like any other course but at the same as the competition -- I like the challenge factor very much. The Staff did much better job that the counterpart course at Coursera, here you can enjoy the content. There were some problems, one of them -- lack of official scores, so you never knew how good your program really is, unless you go sift through the forum. I mark this course as hard, because achieving top scores was hard, other than that, I would say the level was medium.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>29843</course_id><course_title>Intro to jQuery</course_title><school>jQuery is the most popular JavaScript library today, in use by over 60% of the top 100,000 most visited websites. This course will teach you how to use jQuery’s core features - DOM element selections, traversal and manipulation. You'll also learn how to read and make sense of jQuery's documentation, making it easy for you to go beyond the methods taught in this class and take advantage of jQuery's full array of features! This course is also a part of our Front-End Web Developer Nanodegree.</school><review_data_id>74527</review_data_id><reviewer_name>varun sharma</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2015-05-06</review_date><review_value>10</review_value><review>I took this course after completing Intro to JavaScript in Udacity. This course in can be summed up as short, sweet &amp; awesome. Basic knowlegde of HTML, CSS is required (like what are tags, id, class). There are just 2 units (took me just around 3 hours to complete) and it straight away kicks off with what jQuery is, how to use it in your own website and why its so popular with front-end development. It had a handful of quizzes which gives a good practice on using various jQuery methods and also a good practice on using the documentation. I would recommend anyone interested in jQuery to take this class. For best results its good to complete Intro to JavaScript (also in Udacity) as this I believe will cement the knowledge and help build appreciation for jQuery.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>27543</course_id><course_title>JavaScript Basics</course_title><school>We're here to help you get you started with JavaScript! In the twenty plus years since its inception, JavaScript has become the _lingua franca_ of the web, that's to say, it's become the main tool to create interactive content on the Internet. In this course, you'll explore the JavaScript programming language by creating an interactive version of your résumé. You’ll learn the JavaScript programming fundamentals you need while building new elements and sections to enhance your résumé. This course is also a part of our Front-End Web Developer Nanodegree.</school><review_data_id>74541</review_data_id><reviewer_name>varun sharma</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2015-05-07</review_date><review_value>10</review_value><review>This course has 3 units to it, and I found it to be very interactive and interesting, and the best part is you end up with your own online resume which you can use to showcase your growing skills. The first unit kicks off with talk about the JavaScript language and how to use it in a webpage, it also talks about the way we can insert content inside our web page, and more importantly how content can be added programmatically in your webpage. A light use of jQuery is also shown here, which you'll be using throughout the course. Unit1 talks about the data types in JavaScript, variables, booleans, objects. Other things taught in this course is about JSON and the basic usage. And yeah, the instructors are awesome in this course, they are concise and clear in delivering the knowledge which keeps you hooked. Overall I think this course covers all the basics you need to take your JavaScript adventure started in an effective and fun way. I would recommend any one interested in learning JavaScript to take this course, and then continue with advanced concepts.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>48844</course_id><course_title>Software Architecture &amp; Design</course_title><school>Software Architecture and Design teaches the principles and concepts involved in the analysis and design of large software systems. This course is split into four sections: (1) Introduction, (2) UML and Analysis, (3) Software Architecture, and (4) Software Design.</school><review_data_id>115047</review_data_id><reviewer_name>Kevin Wu</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2015-11-02</review_date><review_value>10</review_value><review>This is a great course if you have some familiarity with Software Engineering Principles, but would now like to take the next step. The lectures are designed in a very engaging manner, with short and concise videos. I definitely recommend this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>48845</course_id><course_title>Introduction to Computer Vision</course_title><school>This course provides an introduction to computer vision including fundamentals of image formation, camera imaging geometry, feature detection and matching, multiview geometry including stereo, motion estimation and tracking, and classification. We’ll develop basic methods for applications that include finding known models in images, depth recovery from stereo, camera calibration, image stabilization, automated alignment (e.g. panoramas), tracking, and action recognition. We focus less on the machine learning aspect of CV as that is really classification theory best learned in an ML course. The focus of the course is to develop the intuitions and mathematics of the methods in lecture, and then to learn about the difference between theory and practice in the problem sets. All algorithms work perfectly in the slides. But remember what [Yogi Berra](http://yogiberramuseum.org/just-for-fun/yogisms/) said: In theory there is no difference between theory and practice. In practice there is. (Einstein said something similar but who knows more about real life?) In this course you do not, for the most part, apply high-level library functions but use low to mid level algorithms to analyze images and extract structural information.</school><review_data_id>119917</review_data_id><reviewer_name/><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2016-03-30</review_date><review_value>10</review_value><review>Really thorough course with a lot of theory. Covers everything from image filtering and edge detection, to feature detection and description, to image transformations, stereo imaging and camera calibration, to photometry using reflection models and BRDFs, to parameter estimation with RANSAC and tracking with Kalman filters, Bayes filters and particle filters, to Image flow, to color spaces and image segmentation, to image classification, recognition, boosting and face detection, to 3D perception, passive and active 3D sensing and the Kinect, to how vision works on the retina and in the brain. I probably missed a few. Just go check it out.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>420</review_data_id><reviewer_name>Sai</reviewer_name><other_review_count>13</other_review_count><other_course_completed>13</other_course_completed><review_date>2012-11-25</review_date><review_value>5</review_value><review>This is a very introductory course and maybe best suited for high school students. There was a harsh criticism of this course by a college math teacher (http://www.angrymath.com/2012/09/udacity-statistics-101.html) and Dr. Thrun is going to address some of his concerns in the next version (http://blog.udacity.com/2012/09/sebastian-thrun-statistics-101-will-be.html). MOOC is still in its infancy and I think it is a great attitude to welcome criticism and try to improve based on feedback. Anyway, if you are thinking of taking this course, make sure to do so after the major update.</review><helpful_rate>4</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>2577</review_data_id><reviewer_name>makoto_inoue</reviewer_name><other_review_count>8</other_review_count><other_course_completed>7</other_course_completed><review_date>2013-06-22</review_date><review_value>10</review_value><review>The first 30 % was a bit too basic, but then got really interesting. Even though the topic is about statistics, it has emphasise on probability a lot and the topic explaining about the conditional probability (aka Bayers rule) was the best part. This is also the first time for me to try out self paced course and I like the format better than the ones with deadlines.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>1315</review_data_id><reviewer_name>Dan</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-04-15</review_date><review_value>8</review_value><review>Sebastian Thrun is an excellent instructor and his well-designed course included fun, diverse, and engaging example problems to apply Python to statistical analysis. Having used statistical analysis for work for the last five years (although not applied with code), having taken CS101 and Web App. development (both through Udacity), and coming from an engineering background, I didn't learn new concepts, but it was a good refresher for basics and an excellent way to improve code-writing fluency -- important in the working world where efficiency trumps technology in many situations. I had hoped the course would delve into some more advanced topics in data analysis, but in hindsight it is probably best left quite basic for the greater audience of beginner programmers with little or no background in statistics. The course is definitely worth taking to learn or refresh basics concurrent with applying it effectively in code. At a bare minimum, it will improve the critical thought process for the type of information we are exposed to each day by the spectrum of media. I would also recommend it for professionals not coming from a math background who want to develop practical skills for many types of consulting. IMO most work out there isn't about the ability to apply cutting-edge theory, but instead is about mastering the application of fundamentals and the ability to quickly perform 'back-of-envelope' estimates as 'reality checks'.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>30704</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-05-04</review_date><review_value>7</review_value><review>Intro to statistics is one of Udacity's older courses and while it was one of the few free stats courses on the web when it was released, it has more a lot more competition today. Intro to stats is a decent course that covers some of the most basic topics in statistics. The course fairly slowly with periodic spurts of difficulty. While most MOOCs underuse interactive elements, I found that this course had too many in-lecture quizzes, which just end becoming tedious. If you're looking for a basic intro to stats, Udacity's other stats course "Statistics" is a better option.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>61</review_data_id><reviewer_name>Doug</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2012-10-12</review_date><review_value>4</review_value><review>Course seemed like it was rushed and incomplete (although I know there have been revisions). Material was not university-level. I appreciate the attempt to make it intuitive and not too hard. But, the interactive quizzes were sometimes repetitive and too easy. There are much better options for learning Stats from Coursera.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>110659</review_data_id><reviewer_name>Rajat Shah</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2015-07-24</review_date><review_value>8</review_value><review>Instructor seems very dedicated but the content covered is too basic. It got more and more boring as the quizzes in the course are very repetitive. It asks you same questions again and again with slightly different input and it gets very uninteresting. The concepts are not covered in depth and the approach to explain them only with examples in horrible. Seems to be only for the beginners.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>55670</review_data_id><reviewer_name>Emrah Erden</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2014-09-27</review_date><review_value>4</review_value><review>I have finished some part (23/34) of the Statistics course in 2014. Thanks to Dr Thrun, I have learned some of basic concepts such as Bayes rule and variance which are used in many of the image processing, machine learning and artificial intelligence courses. Also course introduced me with the basics of Python programming language. But this was the good part. Here comes the sad story: Ambiguities in the questions, miss-typed sections in the course material is unbearable and unacceptable. Trust me, in the course forums there are many people concerning about the same problems. The most sad thing is: even-tough the course started in 2012, none of the required revisions had been made even in 2 years time.. I have mailed, and reported Udacity about these problems, but nobody responded and no one really cares.. The course was a beta version, and still it is.. In my opinion, Udacity should first fix, and revise the problems in the course material rather than introducing new courses.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>41208</review_data_id><reviewer_name>José Luis Fernández Barros</reviewer_name><other_review_count>8</other_review_count><other_course_completed>8</other_course_completed><review_date>2014-07-11</review_date><review_value>8</review_value><review>This is an basic course, under graduate level, but with some fun concepts even if you have some knowledge about statistics. Sebastian Thrun, founder of Udacity, demonstrates to be a great instructor.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>3328</review_data_id><reviewer_name>Dick Heiser</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2013-10-01</review_date><review_value>10</review_value><review>Sebastian Thrun is one of the best video professors of all. He is very smart and friendly. The course was outstanding. State-of-the-art.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>490</review_data_id><reviewer_name>Keith Thomas</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-11-30</review_date><review_value>8</review_value><review>Thrun will be updating the class shortly, but I'll still share my experience on the first version. I thought it was a very interesting class, engaging much more than a class at college usually does. His examples are really nice and those are what I remember the most after the fact. At the time, the difficulty felt just right, but now that I've taken a university-level statistics course, I see that this course only really covers about a quarter of what we covered at school. If anything, this is more of a high school level course. Stay Udacious!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>257</review_data_id><reviewer_name>Jonahlyn</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2012-10-31</review_date><review_value>10</review_value><review>This was a great class. Really helped me get ready for more advanced statistical topics.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>112</review_data_id><reviewer_name>Bharat Krishna</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2012-10-24</review_date><review_value>8</review_value><review>It was a nice course. I expected more advanced topics to be covered. But as it is a beginner course they weren't. Optional programming exercises were good.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>3</course_id><course_title>Intro to Statistics</course_title><school>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</school><review_data_id>31</review_data_id><reviewer_name>Lawrence</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-10-11</review_date><review_value>10</review_value><review>Great class.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>3173</review_data_id><reviewer_name>Mizar83 .</reviewer_name><other_review_count>9</other_review_count><other_course_completed>8</other_course_completed><review_date>2014-04-11</review_date><review_value>8</review_value><review>Very nice intro course to Java, starting with the very fundamentals. I took little more than half this course, and I was able to write Java programs for an Algorithms course (in the meantime, I finished this course with a certificate). Nice and short programming assignments are after almost each segment, and it's possible to download all of the codes for looking at them offline.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>117807</review_data_id><reviewer_name>Yi Zheng</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2016-01-21</review_date><review_value>8</review_value><review>pros: Good place to start, easy to catch up, very detailed for zero background beginners. From the begging data structure , decisions , loops then to inherit, giving a complete picture of object oriented programming. cons:no classed notes/ppt available, each time need to watch the video lectures again to find back what i was taught</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>111531</review_data_id><reviewer_name>Steven Frank</reviewer_name><other_review_count>35</other_review_count><other_course_completed>35</other_course_completed><review_date>2015-08-13</review_date><review_value>8</review_value><review>This is a polished, professionally produced introduction to the Java programming language. It's suitable for a wide audience, ranging from those with no programming experience at all to people like me looking to fill a hole in our repertoires. The course is organized progressively, beginning with Java basics and covering gradually more advanced topics. Each unit includes a series of short lectures, most of which are followed by brief programming problems or questions. A problem set, with more in-depth programming assignments, follows most of the lecture series. There's also an optional final project. The instructors are excellent and no textbook is necessary (although beginners may find themselves occasionally in need of a reference -- and there are plenty to be found on the web). The course expects you to install the free BlueJ programming environment, and provides you with downloadable files corresponding to the online programming assignments. This approach not only provides greater opportunity for debugging and program refinement than is possible in a screen submission, but also familiarizes you with a very useful programming tool. For those who care about credentials, note that Udacity no longer offers certificates of completion for those who have not enrolled in the expensive pay version of the course; this class is so introductory, however, that few will suffer as a result.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>74005</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-04-08</review_date><review_value>10</review_value><review>I really like this course. I had some knowledge of Java before I took it. I enjoyed solving problems in this course. However, this course could be hard since some problems are like brain teasers. But all of those problems are solvable with some effort. I would suggest this course for people who are willing to invest their time.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>67385</review_data_id><reviewer_name>Panos Gr</reviewer_name><other_review_count>5</other_review_count><other_course_completed>4</other_course_completed><review_date>2015-01-05</review_date><review_value>8</review_value><review>It was overall very well done but I needed a textbook to complete it, since some of the subjects were not thoroughly explained</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>52703</review_data_id><reviewer_name>caroline m</reviewer_name><other_review_count>2</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-08-31</review_date><review_value>9</review_value><review>could add other more advanced features - or do another course as followup to this one</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>462</course_id><course_title>Intro to Java Programming</course_title><school>In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.</school><review_data_id>4826</review_data_id><reviewer_name>Ekaterina Rumyantseva</reviewer_name><other_review_count>6</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-05-14</review_date><review_value>6</review_value><review>The course is boring and not well organized. I'm taking it because it's really simple. Tests don't catch all errors. PS There's a lot of pretty girls, but where are good looking men? It's unfair :(</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>8</course_id><course_title>Programming Languages</course_title><school>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</school><review_data_id>519</review_data_id><reviewer_name>Afref Fetter</reviewer_name><other_review_count>12</other_review_count><other_course_completed>12</other_course_completed><review_date>2012-12-01</review_date><review_value>9</review_value><review>Prior experience in the field: None. Like: Wes Weimer integrated pop-culture references really well with his lectures, making them very informative on non- technological issues as well. The lecturer's enthusiasm can fill a helium balloon and carry it to space. Loved it! The class was very engaging and had you hooked till the end. The assignments required you to put your thinking caps on, and not your "reading" caps like some other courses. Dislike: I feel I was unable to obtain a "complete picture" [a parser, lexer, etc. put together], but maybe that's just me. We didn't really make a web browser, only a superficial one. This was acknowledged by the lecturer. The code we wrote seemed too constrained by the particular language and library we were using (Python, etc.). The "general" idea [how to implement it] was lost. Overall: What is lacking in course content, Westley Weimer makes up for with his excellent teaching abilities. Don't expect to become too proficient at the subject, but definitely worth a try.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>8</course_id><course_title>Programming Languages</course_title><school>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</school><review_data_id>61264</review_data_id><reviewer_name>brian c</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-12-17</review_date><review_value>6</review_value><review>I have a tough time rating this course--I'm sure it's really great if you want to learn about creating and parsing a language. Although you do learn import concepts like regular expressions, there are far more effective ways to learn the basics in language parsing. This course goes in depth into esoteric concepts that the average programmer would never use. If you're looking to develop your own language or write a program that does a crazy amount of parsing, this is the class for you. Otherwise, you can find something better!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>8</course_id><course_title>Programming Languages</course_title><school>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</school><review_data_id>43685</review_data_id><reviewer_name>alinsoar</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-08-03</review_date><review_value>9</review_value><review>Finished the full course in 5 days (without final exam, that does not interest me). For somebody who already knows the subject, the course is easy, and the single effort is just to write some recursive functions for some of the quizzes. This is another child course born by simplifying SICP. The particular experience of the professor Wes shared in his videos makes the course interesting to follow. He inserted too many jokes in the lectures, which can be tiring for some persons in some mood. Definitively, it is not the best course to follow as an introduction to the subject, if you do not already know the subject. The course teaches the basic ideas about lexers, parsers, and implements a sublanguage of html + js using ply. To represent graphically the output, the professor extracted a file named graphics.py from a latex compiler implemented in python, and uses that library that already renders tokens identical to html/ For example, opentag(tag), closetag() from html are present in this latex library, hence the output of the final html/js evaluator will be generated as a pdf. Definitively, it is worth taking this course, but does not allocate so high priority comparing to other courses.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>8</course_id><course_title>Programming Languages</course_title><school>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</school><review_data_id>3250</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-02-14</review_date><review_value>8</review_value><review>Programming languages uses the goal of writing web browser as a platform to teach topics related to writing programming languages. The class covers the process of lexxing strings of HTML to transform it into sequences of tokens and then parsing those tokens into syntax trees that can be passed to an interpreter to display the web page represented by the HTML. Wes Weimer is a good teacher and brings a fun attitude and some cringe-worthy jokes and drawings to the table. He has a habit of throwing in random historical and other educational tidbits to lectures, which can be good or bad depending on your mood. His wit helps to mask the dryness of the material and the fact that it may not be especially useful to you unless you plan to build a language, a browser, a parser, etc. yourself. It is good, however, to have a basic understanding of how computers process language and certain topics like regular expressions and list comprehensions are very useful outside of the context of this course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>8</course_id><course_title>Programming Languages</course_title><school>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</school><review_data_id>2925</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-08-22</review_date><review_value>9</review_value><review>One of my favorite online classes. I had taken a class on compilers and programming languages with Alex Aiken many years ago, but I needed a refresher. My previous course was more intensive, but for my needs, I preferred this course. The instructor, Wes Weimer, was extremely knowledgeable and fun, and the quizzes and exercises kept me on top of things. The class was well thought out and had a number of satisfying problems to solve. The last final exam question in particular beautifully summarized the lessons of the course. The biggest downside of the class is that there's not enough of it. Although it's advertised as "Building a Web Browser", it's really more about writing a lexer, parser, and interpreter. Those are key to the process, to be sure, but I was hoping to have my own browser at the end, and missed a bit of the big-picture motivation for all the regular expressions, finite state machines, et al. that we covered. I would also have liked more material about the design of programming languages themselves, even if it meant losing some detail on things like generating the chart of parser states. I hope they will consider a follow-up class that covers these subjects in more detail. If you're thinking about taking the class, you may want to consider whether this class is important to the work you hope or plan to do. I've rated the class based on the quality of the instruction, which was very high, but in my experience, this material has not been as directly applicable to my work as, say, Udacity's Web Development course. You may also want to consider whether you're prepared for it. The only listed prerequisite is CS101, but I think you would find it easier going if you already had experience writing programs with trees or other large data structures. That said, the course was entirely self- contained and everything you needed was explained. Here's hoping Professor Weimer decides to teach some more online classes!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>8</course_id><course_title>Programming Languages</course_title><school>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</school><review_data_id>10</review_data_id><reviewer_name>Gerard O'Neill</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2012-09-18</review_date><review_value>8</review_value><review>I took CS262 Programming Languages back in April/May alongside CS212 and CS253. The whole idea behind the course was to gain an understanding of how programming languages are designed, both in theory and practice, by writing components of HTML and JavaScript parsers. I didn’t really struggle in this class, since it started pretty well into the compilers course that I was taking at Rutgers. Because of that, I had a pretty good understanding of most things that were taught. That’s not to mention the fact that I am fluent in HTML and JavaScript as well. Still, there was some stuff to be learned in this course! CS262 had a very healthy mix of theory and practice. In my compilers course, most of the class was theory, and then we had three major programming assignments. In CS262, you get to apply pretty much everything you learn right away. I thought this was awesome, especially because I got to apply some things from my compilers course that wasn’t tested in class (e.g. FSM minimization). The course was also taught using PLY (Python Lex-Yacc), which is a Python implementation of Lex and Yacc. Lex and Yacc are very well-known parsing tools used in the creation of programming languages. Overall, I think CS262 is an awesome course. Westley Weimer is extremely smart, and he made me laugh quite a bit, especially with his drawings. There’s not much else to say about the course, since I really had no issues with it. If you are interested in learning the basics of automata theory and how to build an interpreter or compiler, I highly recommend the course. Also, if you’re taking a similar course in a brick-and-mortar university like I was, this is definitely a great complement!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>439</course_id><course_title>College Algebra</course_title><school>Math is everywhere. In this class, you’ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you’ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</school><review_data_id>4848</review_data_id><reviewer_name>Jeremy</reviewer_name><other_review_count>4</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-01-15</review_date><review_value>8</review_value><review>This is a good basic algebra course that starts out very basic and builds nicely on those basic components. My only complaint would be that some of the problems take a huge jump in terms of difficulty and then there is a lack of explanation as how to solve. Usually the discussion forums help with this but sometimes it can be frustrating. Worthwhile taking if you need a good basic review of algebra concepts.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>439</course_id><course_title>College Algebra</course_title><school>Math is everywhere. In this class, you’ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you’ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</school><review_data_id>75523</review_data_id><reviewer_name>Mollie Mandel</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2015-06-10</review_date><review_value>10</review_value><review>This is one of the best courses I have come across. The concepts are explained with realistic examples, all of which start with the basic covering. Most of the algebra that students usually find difficult will be simplified in this course. I would say doing this course may help the student to understand mathematics much more efficie</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>439</course_id><course_title>College Algebra</course_title><school>Math is everywhere. In this class, you’ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you’ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</school><review_data_id>4060</review_data_id><reviewer_name>Fabio Ghirardello</reviewer_name><other_review_count>2</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-12-04</review_date><review_value>4</review_value><review>This course is far too slow paced and the examples are a bit too childish. I doubt anyone old enough for undergraduate courses will find this course efficient; it just takes too long to get to the point. I like the Udacity delivery format better, but I wish the material and syllabus were more similar to UCIrvine's Pre-Calculus offered at Coursera.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>439</course_id><course_title>College Algebra</course_title><school>Math is everywhere. In this class, you’ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you’ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</school><review_data_id>2906</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-07-27</review_date><review_value>10</review_value><review>All concepts are very well explained and complemented by many exercises. Attempts are made to illustrate the conceptual material with real world situations (albeit somewhat artificial). The course is self-paced and one can retry the exercises any number of times, so that priority in on learning and not on generating marks. Printing a "MathQuill" helping table would be handy in some instances. Although I was familiar with the material, as an Engineer, the course was great to make me regain same abilities that had been lost by excessive use of electronic calculators and math software....</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>439</course_id><course_title>College Algebra</course_title><school>Math is everywhere. In this class, you’ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you’ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</school><review_data_id>1825</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-05-31</review_date><review_value>10</review_value><review>First math course I've completed for some time and it was fun too!. I was sort of familiar with most of the content and at first thought i could just blaze through the content but i quickly found out that stuff that you knew as a child doesn't stick for ever. Kindly enough the course begins with the basic, lesson 1 to 16 for me was mostly reviewing and mastering content I once knew. And having a solid knowledge of that was crucial for the following lessons where the math was a bit more complex. At times the grader needs to be more human, i got stuck a few times not knowing what i did wrong, a common problem with these kind of courses. I really like the Udacity style courses with fantastic short videos followed by loads of exercises so i can master the content and that there is no time limit. Hopefully the team behind this course will do more math courses, because they have left me wanting more.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>4</course_id><course_title>Intro to Algorithms</course_title><school>Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.</school><review_data_id>1317</review_data_id><reviewer_name>Dan</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-04-15</review_date><review_value>8</review_value><review>Another superstar instructor from Udacity, Prof. Littman designed a challenging, interesting course. He has a natural teaching style, and chose excellent example problems to keep me engaged. Having completed several other courses through Udacity definitely served me well in this course, there is far more required knowledge of Python and programming than other introductory courses offered by Udacity. Through taking this course, I came to realize I needed to develop better notation habits in my code, and better systems of code-verification, because as input data becomes very large, the process becomes more abstract, and it gets harder to keep track of what you're trying to do compared to what you're actually doing. The final units were quite challenging as they required mastery of earlier material and knowledge transfer. The emphasis on computational efficiency was much appreciated, the material did an excellent job of illustrating the limits of 'brute-force' computation and just how much better certain algorithms can be. For some problems, the error messages produced by the grader did not convey useful information -- a source of frustration at times that led me to seek forum hints more often than I would have liked. In almost all cases my errors were subtle, and it would have done wonders for my momentum and overall confidence in my grasping of the material. At the beginning of the course I think it would be useful to have a short video explaining expectations along with suggestions or demonstrations of good coding and testing habits.</review><helpful_rate>4</helpful_rate></Course-Reivew><Course-Reivew><course_id>4</course_id><course_title>Intro to Algorithms</course_title><school>Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.</school><review_data_id>2791</review_data_id><reviewer_name>Drew Verlee</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-07-18</review_date><review_value>9</review_value><review>Algorithms are approached in a fun and understandable way. Leaving you less likely to reach for a cookbook and more likely to invent your own reciepy better suited to the task. Challanging to say the least you might feel daunted by the homeworks, but don't be discouraged!</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>4</course_id><course_title>Intro to Algorithms</course_title><school>Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.</school><review_data_id>59837</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2014-11-10</review_date><review_value>5</review_value><review>Honestly can't recommend this course. The course uses social networks to explain different algorithms. The course was a medium difficulty, but unfortunately I don't think I came away a better programmer. It formalizes the way you think about running time, but didn't really give me any tools to create great programs. After taking Norvig's course (Cs 212 Design of Computer Programs), this one was disappointing.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>4</course_id><course_title>Intro to Algorithms</course_title><school>Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.</school><review_data_id>41210</review_data_id><reviewer_name>José Luis Fernández Barros</reviewer_name><other_review_count>8</other_review_count><other_course_completed>8</other_course_completed><review_date>2014-08-05</review_date><review_value>10</review_value><review>Great course, great instructor. It really worth if you want to improve your programmer skills. You will see some of the beauties in CS: lots of wisdom in a few lines of code. I needed more hours than expected to finish, especially with some really challenging problems, but I enjoyed every minute.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>141</course_id><course_title>Software Debugging</course_title><school>In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.</school><review_data_id>34016</review_data_id><reviewer_name>Robert Davis</reviewer_name><other_review_count>16</other_review_count><other_course_completed>16</other_course_completed><review_date>2014-05-31</review_date><review_value>9</review_value><review>This was a pretty fun class. You will need to have a pretty good handle on python programming before beginning. I enjoyed the difficulties of creating tests that covered every line of code. I would recommend this for any programmer.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>141</course_id><course_title>Software Debugging</course_title><school>In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.</school><review_data_id>2207</review_data_id><reviewer_name>Equanimous Creativity</reviewer_name><other_review_count>33</other_review_count><other_course_completed>32</other_course_completed><review_date>2013-06-16</review_date><review_value>7</review_value><review>I think "systematic debugging" could have been a more precise title for this course. Because it doesn't cover how to write unit tests or using a debugger. It teaches how to write code which can help isolate the bugs in your software. At Udacity you can start the course at any time and there is no deadline, which is nice. But it also means that I haven't finished exam because I been busy with other courses.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>141</course_id><course_title>Software Debugging</course_title><school>In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.</school><review_data_id>1455</review_data_id><reviewer_name>Jithin James</reviewer_name><other_review_count>3</other_review_count><other_course_completed>2</other_course_completed><review_date>2013-05-03</review_date><review_value>10</review_value><review>Seems to be pretty interesting subject.Going through the lectures and test problems.Interesting to hear the lectures and seems good.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>141</course_id><course_title>Software Debugging</course_title><school>In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.</school><review_data_id>3012</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-10-07</review_date><review_value>7</review_value><review>This class is taught with a distinctive style and is expanding my understanding of debugging techniques, but I still don't feel like I have a comprehensive understanding of the subject. Most of the required programming is pretty straightforward for anyone experienced enough to consider taking the class, but some of the questions seem unnecessarily confusing. Despite its shortcomings, I appreciate the class and the instructor's insights.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>140</course_id><course_title>Differential Equations in Action</course_title><school>In this course, you'll hone your problem-solving skills through learning to find numerical solutions to systems of differential equations. You'll write code in Python to fight forest fires, rescue the Apollo 13 astronauts, stop the spread of epidemics, and resolve other real-world dilemmas.</school><review_data_id>1316</review_data_id><reviewer_name>Dan</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2013-04-15</review_date><review_value>9</review_value><review>Jorn Loviscach and his teaching assistants produced an excellent course in applied differential equations. Of the five courses I have completed through Udacity, the problem sets in this course were the most enjoyable to complete. Coming from an engineering background, I have previous exposure to the math theory, as well as engineering specific theory, although few courses required applied programming. Since graduation six years ago, I have rarely applied it with programming. The course served as an excellent refresher on developing numerical models and the frequent code-based quizzes helped improve my fluency in writing Python code. The topics presented covered an interesting range of disciplines, but didn't cover nearly the scope of a university-level introductory differential equations course. That said, I came out of this course much better equipped to apply numerical computation in practice which may be more significant and may indicate a better understanding of fundamentals. Simply put, the course requires students to spend time applying a few basic computational algorithms in a diverse array of disciplines to encourage knowledge transfer. This is the type of learning that eludes many students in the university system. I would have liked more emphasis on analysis of the complexity of problems such that students develop a more adaptable problem-solving 'toolbox' or intuitive sense of what algorithm to use with what resolution (time-step, grid size). This topic was covered in the course at various points, but not to the degree I hoped it would.</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>140</course_id><course_title>Differential Equations in Action</course_title><school>In this course, you'll hone your problem-solving skills through learning to find numerical solutions to systems of differential equations. You'll write code in Python to fight forest fires, rescue the Apollo 13 astronauts, stop the spread of epidemics, and resolve other real-world dilemmas.</school><review_data_id>760</review_data_id><reviewer_name>Sai</reviewer_name><other_review_count>13</other_review_count><other_course_completed>13</other_course_completed><review_date>2012-12-23</review_date><review_value>8</review_value><review>This course covers the basics of numerically solving ordinary and partial differential equations. I like how it picks interesting problems from physics, biology, engineering, and social sciences and shows you how they are formulated as ODE or PDE. The assignments are in Python with some help from the NumPy library (http://www.numpy.org/). If you are interested in more advanced material, I recommend to take a look at Coursera's Scientific Computing (http://coursetalk.org/scientific-computing-uw).</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>140</course_id><course_title>Differential Equations in Action</course_title><school>In this course, you'll hone your problem-solving skills through learning to find numerical solutions to systems of differential equations. You'll write code in Python to fight forest fires, rescue the Apollo 13 astronauts, stop the spread of epidemics, and resolve other real-world dilemmas.</school><review_data_id>34017</review_data_id><reviewer_name>Robert Davis</reviewer_name><other_review_count>16</other_review_count><other_course_completed>16</other_course_completed><review_date>2014-05-31</review_date><review_value>9</review_value><review>This class was enjoyable. I did not complete it yet due to other courses interfering (I imagine I will get back to it some day). You should have a solid programming background before beginning. (unless they changed something...I started this class last year sometime)</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>237</course_id><course_title>Interactive 3D Graphics</course_title><school>This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.</school><review_data_id>2578</review_data_id><reviewer_name>makoto_inoue</reviewer_name><other_review_count>8</other_review_count><other_course_completed>7</other_course_completed><review_date>2013-06-22</review_date><review_value>10</review_value><review>This is the best course if you want to learn 3D graphics with javascript (three.js). I particularly liked the interactive assignment. 3D programming is still very overwhelming with lots of things to (x,y,z coordinates, angle of the camera, etc) so hard to write from scratch. I really liked their approach of giving us half baked script, and assignment was for us to finish off the code.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>237</course_id><course_title>Interactive 3D Graphics</course_title><school>This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.</school><review_data_id>60991</review_data_id><reviewer_name>Maciej Pilichowski</reviewer_name><other_review_count>9</other_review_count><other_course_completed>9</other_course_completed><review_date>2014-11-27</review_date><review_value>8</review_value><review>Inspiring and enjoyable. Normally I dislike Udacity format of courses, but for this one it worked well. The instructor, Eric Haines, attitude was great, enthusiastic and willing to help students understand the subject. He does not show off with what he knows, he truly teaches. And he managed to cover quite some material. WOW! You don't see that every day. I didn't give 5 stars, because there are too many quizzes, and too little programming assignments, it is shaped more towards students who don't have experience with programming at all, so for example loop is a complex structure. In other words is a bit too easy. Of course I highly recommend it!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>29023</review_data_id><reviewer_name>Tomas Kazemekas</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-04-14</review_date><review_value>10</review_value><review>I have completed the updated version recently. It is a good introduction to Hadoop distributed computing system useful for big data processing. The course is quite short but also concentrated. There are only four lessons but the installation, implementation and programming that one has to do for the assignments take much more hours. One of the most valuable features of the course I found the opportunity to download and install Cloudera Distribution of Hadoop on a virtual machine (also included) on my computer and see Hadoop in action. All the programing in done in Python and command line.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>4900</review_data_id><reviewer_name>Doug</reviewer_name><other_review_count>6</other_review_count><other_course_completed>6</other_course_completed><review_date>2014-01-22</review_date><review_value>6</review_value><review>This was a well-done course but, unfortunately, very, very short. It's a good way to just get a very brief taste of Hadoop, MapReduce, and Cloudera. There are a couple hours of videos total and a couple of interesting labs that might take another few hours total. The material was professionally presented and fun to go through, but I was really hoping for a lot more content. In fact, it makes a good teaser class for someone that would have the opportunity to pay for a few thousand dollars for a class from Coursera. I hope other Coursera classes in the Data Science track have more content or the new "for pay" certificates won't have much value.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>61206</review_data_id><reviewer_name>C Meez</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2014-12-12</review_date><review_value>4</review_value><review>I expected to have a full understanding of Hadoop and Mapreduce functions and how/when to use them. I have a better, but still only partial understanding of the material I had hoped to master in this course. Lesson 4 needs to be have better supporting material; to clarify what is being taught. I would also improve the assistance given to students. Although Udacity advertizes a high level of assistance and tutoring for students, I received very little assistance and nothing I would even close to tutoring during the course. ** it should be noted that this course was not free for me. I was paying $199 for the course. So I may have expected more assistance than would be expected from a free course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>7021</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-02-11</review_date><review_value>6</review_value><review>A short intro to Hadoop and MapReduce. Similar to the design of everyday things course, the course was so short that I did not feel motivated to do the fairly involved final project.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>4948</review_data_id><reviewer_name>Gabriel Candal</reviewer_name><other_review_count>18</other_review_count><other_course_completed>14</other_course_completed><review_date>2014-02-04</review_date><review_value>6</review_value><review>If you know programming (no need to be an expert, not even close) and don't know what MapReduce is, this is a nice place to start. If seen as a brief introduction to MR, to the point where you can write your own solutions to simple problems, it fulfills its role. Nevertheless, it won't make you an expert and it's fairly easy to complete (an afternoon is enough). No free certificate.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>4842</review_data_id><reviewer_name>Haley</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-01-14</review_date><review_value>9</review_value><review>I'm a computer science student and worked briefly with MapReduce (MR) a few semesters back. Overall, the course was very brief and pretty easy (doable in less than a week). As advertised by the name of the course, the class is a good introduction to what MR is but nothing more. It's very light on material. After you do the exercises, you'll have a pretty good idea of how to use MR.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>4838</review_data_id><reviewer_name>Alex Parij</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-01-14</review_date><review_value>8</review_value><review>A basic intro to Hadoop. For what it is just an intro, it's ok. Everything is very organized and that's why it took little time to go over the material and to the exercises. Kudos to the team.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12747</course_id><course_title>Intro to Hadoop and MapReduce</course_title><school>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</school><review_data_id>4765</review_data_id><reviewer_name>Juanli Shen</reviewer_name><other_review_count>3</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-01-06</review_date><review_value>7</review_value><review>There're only 3 main course videos, so you can finish this course quite quickly. The content is easy (since the idea of MapReduce is easy?). And there're some hands-on practice helping to give you a sense of HDFS and the mapper and reducer code in Python. The installation and commands of the software is quite simple because a pre-installed Hadoop is offered along with the VM. So what you need to do is just to create a VM with the given virtual disk. There's a problem actually annoying me. The review questions and the project description are so confusing that I skip some and guess some.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>19815</course_id><course_title>Programming Foundations with Python</course_title><school>In this introductory programming class, you’ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You’ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. We’ve heard that programming can be intimidating for newcomers, and we’ve created this course to make sure that you have a great learning experience! You’ll learn ***actively*** with our mini projects (see the awesome list below), which you’ll be able to share proudly with your friends. You’ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. You’ll pick up some great tools for your programming toolkit in this course! You will: - Start coding in the programming language Python; - Reuse and share code with Object-Oriented Programming; - Create and share amazing, life-hacking projects! This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it’s also a great way to learn how software engineers think about solving problems. This course is also a part of our Full Stack Web Developer Nanodegree.</school><review_data_id>31115</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-05-09</review_date><review_value>10</review_value><review>Intro to Object Oriented Programming is a short overview of object oriented programming using the Python programming language. This is a beginner level course but it assumes you have a basic grasp of programming in python. It would be a good course to take after completing the first few weeks of an introductory python course like Udacity's CS 101, Rice's "An Introduction to Interactive Programming in Python" on Coursera or MIT's "Introduction to Computer Science and Programming Using Python" on EdX. Intro to OOP provides a gentle introduction to using classes in python that starts by building up your confidence with creating programs with simple, yet interesting examples like drawing lines, sending text messages and filtering messages for profanity. The instructor uses built-in python class objects to introduce the concept of classes before having students create their own classes. In the final section, you'll use classes to make a basic movie website that plays trailers for your favorite movies. The course touches briefly on some advanced topics in object oriented programming like inheritance and method overriding. This course is very well organized and the instructor explains OOP concepts in a way that makes them easy to understand. You'll also learn about the structure of python programs so that you better understand where functions and classes reside in python and its modules. The instructor frequently refers to the python docs, stackoverflow and Google to figure out how to do new things, which are good skills to learn. Overall this is a great little course that could take anywhere from 5 to 15+ hours depending on your experience level and how much time you want to spend working on projects.</review><helpful_rate>7</helpful_rate></Course-Reivew><Course-Reivew><course_id>19815</course_id><course_title>Programming Foundations with Python</course_title><school>In this introductory programming class, you’ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You’ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. We’ve heard that programming can be intimidating for newcomers, and we’ve created this course to make sure that you have a great learning experience! You’ll learn ***actively*** with our mini projects (see the awesome list below), which you’ll be able to share proudly with your friends. You’ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. You’ll pick up some great tools for your programming toolkit in this course! You will: - Start coding in the programming language Python; - Reuse and share code with Object-Oriented Programming; - Create and share amazing, life-hacking projects! This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it’s also a great way to learn how software engineers think about solving problems. This course is also a part of our Full Stack Web Developer Nanodegree.</school><review_data_id>117960</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2016-01-27</review_date><review_value>4</review_value><review>The course is outdated, and the code provided doesn't work. Often you have to search the Internet for alternatives to the code they are teaching you! The forum is difficult to use and can barely find any good answers. I'm not new to Python, but I just wanted to try out the course. If I was a newbie, I'd quit.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>19815</course_id><course_title>Programming Foundations with Python</course_title><school>In this introductory programming class, you’ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You’ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. We’ve heard that programming can be intimidating for newcomers, and we’ve created this course to make sure that you have a great learning experience! You’ll learn ***actively*** with our mini projects (see the awesome list below), which you’ll be able to share proudly with your friends. You’ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. You’ll pick up some great tools for your programming toolkit in this course! You will: - Start coding in the programming language Python; - Reuse and share code with Object-Oriented Programming; - Create and share amazing, life-hacking projects! This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it’s also a great way to learn how software engineers think about solving problems. This course is also a part of our Full Stack Web Developer Nanodegree.</school><review_data_id>117891</review_data_id><reviewer_name>Lea</reviewer_name><other_review_count>3</other_review_count><other_course_completed>2</other_course_completed><review_date>2016-01-25</review_date><review_value>8</review_value><review>This is one of my first courses with Udacity, though I came into it with basic knowledge of Python syntax from Treehouse's Python Basics course. While it could use polishing, I think the biggest and most useful takeaway of this course is that it dives you immediately into object-oriented programming, reading Python documentation, and working on interesting projects i.e. building a movie website, using Twilio, etc. Overall, this is a solid intro to Python and OOP course, though I'd definitely supplement it with the Intro to Computer Science course.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>19815</course_id><course_title>Programming Foundations with Python</course_title><school>In this introductory programming class, you’ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You’ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. We’ve heard that programming can be intimidating for newcomers, and we’ve created this course to make sure that you have a great learning experience! You’ll learn ***actively*** with our mini projects (see the awesome list below), which you’ll be able to share proudly with your friends. You’ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. You’ll pick up some great tools for your programming toolkit in this course! You will: - Start coding in the programming language Python; - Reuse and share code with Object-Oriented Programming; - Create and share amazing, life-hacking projects! This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it’s also a great way to learn how software engineers think about solving problems. This course is also a part of our Full Stack Web Developer Nanodegree.</school><review_data_id>52640</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2014-08-28</review_date><review_value>6</review_value><review/><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>19815</course_id><course_title>Programming Foundations with Python</course_title><school>In this introductory programming class, you’ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You’ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. We’ve heard that programming can be intimidating for newcomers, and we’ve created this course to make sure that you have a great learning experience! You’ll learn ***actively*** with our mini projects (see the awesome list below), which you’ll be able to share proudly with your friends. You’ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. You’ll pick up some great tools for your programming toolkit in this course! You will: - Start coding in the programming language Python; - Reuse and share code with Object-Oriented Programming; - Create and share amazing, life-hacking projects! This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it’s also a great way to learn how software engineers think about solving problems. This course is also a part of our Full Stack Web Developer Nanodegree.</school><review_data_id>36683</review_data_id><reviewer_name>Igor Todorovic</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-06-24</review_date><review_value>7</review_value><review/><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>2</course_id><course_title>Intro to Physics</course_title><school>Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years.</school><review_data_id>116024</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-11-24</review_date><review_value>8</review_value><review>This was one of the best MOOCs I have experienced. The instructor has done a great job in curating the content and exercises. This also introduced me to Udacity which seems to have a winning format. I hope they site maintains this level of quality now that they are expanding to nanodegrees</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>2</course_id><course_title>Intro to Physics</course_title><school>Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years.</school><review_data_id>3011</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-08-22</review_date><review_value>8</review_value><review>I hadn't planned to take a physics class, but I got hooked after checking out the first few videos of this one. I love the way the instructor, Andy Brown, starts each unit off with a big question inspired by a historical discovery from around the world. It gives you a great sense of motivation as you learn how the great thinkers of the past made their breakthroughs, and how you too can solve seemingly impossible problems. I already took physics long ago in high school, so for me, this course served to reignite my interest in the subject. You don't need to have taken physics before, but you must be quite comfortable with algebra and fairly comfortable with geometry. Although trigonometry is explained in the course, I suspect you'll find it tough going if you haven't previously been exposed to it. Most of the time, the class seems intended for someone who has never taken physics at all, but sometimes it moves too quickly through various equations instead of reiterating the ideas behind them. They sometimes neglect to give you enough practice with each new technique, particularly later in the class. I found myself stymied by a number of homework problems in Week 5 &amp; 6\. Another annoyance is the lack of notes or at least a list of equations. It takes too long to rewatch the videos looking for a certain equation, so I would end up searching on the web or going to the discussion forums. Luckily, if all else fails, you can always watch the solution videos if you get stuck and then give the questions another try. If you're new to physics you'll probably have to check the answers a few times, but that's okay. I hope Udacity will consider making an expanded version of this course that covers some of the issues in more depth and gives students a bit more practice with each concept. I'm very glad for this quick intro, though!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>2</course_id><course_title>Intro to Physics</course_title><school>Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years.</school><review_data_id>2968</review_data_id><reviewer_name>Snow</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-08-10</review_date><review_value>6</review_value><review>As a physics educator in high school, the only reason I take this course is I would like to learn methods of presentation on the subject from others. I really like the way of presentation of the instructor Andy Brown, especially in the first half of the course. It is clear and well paced for a new learner, so I am going to implement some of his presentations in my future. Also, every video segment is only about 2 minutes long, so it can keep people attentive. However, I do not quite recommend real new learner to take his class. One of the reason is many problems in the problem sets are too difficult for new learners, so it is not very good for the learners to develop problem solving skills, which is, in my opinion, the most important part of physics education. For example, I don't think a problem on escape velocity is appropriate at this level. In conclusion, I believe in the planning, the target audience of this course is those who want a "general education" course, however, it seems to me that it looks like more a real "intro to physics" course in college, but it lacks breadth and sometimes takes too deep into a subject. I would say it is too difficult for a general education class but too easy for a real physics class.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>2</course_id><course_title>Intro to Physics</course_title><school>Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years.</school><review_data_id>1108</review_data_id><reviewer_name>Brock Sides</reviewer_name><other_review_count>10</other_review_count><other_course_completed>8</other_course_completed><review_date>2013-03-07</review_date><review_value>8</review_value><review>I was a physics major my first semester in college, so I had learned this material before - twenty years ago. This class was a nice refresher of classical mechanics, and helped me a lot when I took Introduction to Astronomy at Coursera. I think it would serve equally well as a "prefresher", if you have a required introductory physics class that you want to be well-prepared for. If you have a good grasp of algebra, you should be able to complete this class. The lectures are engaging, and are broken up into very small, easy-to- digest chunks.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12744</course_id><course_title>Data Wrangling with MongoDB</course_title><school>In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this! Students will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework. This is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>118732</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2016-02-23</review_date><review_value>2</review_value><review>The basic Python is not well explained in teh course. Too much rushing from course instructor as well as materials. Some one should review the course materials and coach the instructor. It is not enough he is good at subject</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12744</course_id><course_title>Data Wrangling with MongoDB</course_title><school>In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this! Students will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework. This is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>75269</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-06-01</review_date><review_value>8</review_value><review>Great topic and solid instruction. However, the assignments are sometimes unclear, and there is no way to check your work! No solutions are provided throughout the class. The material is clearly presented, and the assignments typically aren't too hard, so it's not a showstopper if you already have Python experience. If you don't have Python experience, don't bother with this class, because the tiniest syntax error will stop you in your tracks.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12744</course_id><course_title>Data Wrangling with MongoDB</course_title><school>In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this! Students will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework. This is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>33403</review_data_id><reviewer_name>Sahel Mastoureshgh</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-05-23</review_date><review_value>10</review_value><review>I think it was very good course, you will learn parsing and manipulating data with python and then mongodb and its query. I learnt alot</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>19126</course_id><course_title>Make Your Own 2048</course_title><school>Ten minutes into this class you will make your own completely personalized version of the insanely addictive game 2048. Even if you've never coded before. Pretty cool, no? You'll do this by making small (but important) modifications to the source code for the original 2048 game. If this sounds intimidating, don't worry. We'll teach you the basics of HTML and CSS and how they interact with Javascript (don't worry if that sentence doesn't mean anything to you yet. It will soon). The purpose of this class is to have fun learning how to quickly and easily take an existing open source program, make some changes, and create something that looks and feels completely new. The game you create will be mobile friendly (you can play it on your phone!) and totally shareable.</school><review_data_id>118346</review_data_id><reviewer_name/><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2016-02-10</review_date><review_value>6</review_value><review>It was good, but it needs some improvement. For example, why do you need a URL? It's stupid. But a person with no prior experience making a 2048 game, it was a great chance to learn how to make it for future references!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>19126</course_id><course_title>Make Your Own 2048</course_title><school>Ten minutes into this class you will make your own completely personalized version of the insanely addictive game 2048. Even if you've never coded before. Pretty cool, no? You'll do this by making small (but important) modifications to the source code for the original 2048 game. If this sounds intimidating, don't worry. We'll teach you the basics of HTML and CSS and how they interact with Javascript (don't worry if that sentence doesn't mean anything to you yet. It will soon). The purpose of this class is to have fun learning how to quickly and easily take an existing open source program, make some changes, and create something that looks and feels completely new. The game you create will be mobile friendly (you can play it on your phone!) and totally shareable.</school><review_data_id>35282</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-06-16</review_date><review_value>8</review_value><review>Make your own 2048 is a short, 1-sitting course that introduces HTML and CSS using in the context of the "2048" game. 2048 its a simple, yet addictive tile moving game; in this course you'll look at the CSS and HTML behind of a version of 2048 and alter the tiles to make your own custom version of the game. This is a fun little course that lets you learn by doing.  Just be careful as you may end up spending way too much time playing the game! Note: the course is supposed to have a second section that dives into the Javascript that drives the game, but the second section has been forthcoming for well over a month now, so there's no telling when it will be available. As it stands now the course only takes an hour or so to get through plus whatever time you spend fiddling around with the game.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>29881</course_id><course_title>Intro to Machine Learning</course_title><school>Machine Learning is a first-class ticket to the most exciting careers in data analysis today. As data sources proliferate along with the computing power to process them, going straight to the data is one of the most straightforward ways to quickly gain insights and make predictions. Machine learning brings together computer science and statistics to harness that predictive power. It’s a must-have skill for all aspiring data analysts and data scientists, or anyone else who wants to wrestle all that raw data into refined trends and predictions. This is a class that will teach you the end-to-end process of investigating data through a machine learning lens. It will teach you how to extract and identify useful features that best represent your data, a few of the most important machine learning algorithms, and how to evaluate the performance of your machine learning algorithms. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>60976</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-12-08</review_date><review_value>8</review_value><review>Udacity's Intro to Machine Learning is an introduction to data analysis using Python and the sklearn package. The course consists of 15 lessons covering a wide range of machine learning topics including classification algorithms (Naive Bayes, decision trees and SVMs), linear regression, clustering, selecting and transforming features and validation. As a self-paced course, you can take however long you wish on each lesson; some take less than an hour, while others can take several hours depending on how long you work on the mini projects. Intro to Machine Learning requires basic programming and math skills. Each lesson consists of a series of video segments and quizzes introducing a new topic followed by a mini-project that gives you a chance to work with code dealing with the topic at hand. Katie does most of the teaching and her enthusiasm helps keep the course engaging. The quizzes can, at times, seem patronizingly simple. The mini projects are a bit harder and contribute more to learning, although they occasionally lack adequate guidance and feedback to help students arrive at the expected output. The final project and many of the mini-projects leading up to it, involve detecting persons of interest in the Enron scandal using a data set of emails sent by Enron employees. Interesting real-world data sets are always a plus. Intro to Machine Learning is an accessible first course in machine learning that prioritizes breadth, high level understanding and practical tools over depth and theory. You won't be an expert in any of the topics covered in this course by the time you're done, but you'll have a good foundation to build upon. If you are interested taking a similar course with many interesting mini projects that uses the R programming language, try MIT's Analytics Edge on edX. Coursera's Machine Learning with Andrew Ng is a logical next step to dig deeper into machine learning algorithm design and implementation, while Caltech's Learning from Data on edX is a great course if you are interested in machine learning theory.</review><helpful_rate>5</helpful_rate></Course-Reivew><Course-Reivew><course_id>42731</course_id><course_title>Model Building and Validation</course_title><school>This course will teach you how to start from scratch in answering questions about the real world using data. Machine learning happens to be a small part of this process. The model building process involves setting up ways of collecting data, understanding and paying attention to what is important in the data to answer the questions you are asking, finding a statistical, mathematical or a simulation model to gain understanding and make predictions. All of these things are equally important and model building is a crucial skill to acquire in every field of science. The process stays true to the scientific method, making what you learn through your models useful for gaining an understanding of whatever you are investigating as well as make predictions that hold true to test. We will take you on a journey through building various models. This process involves asking questions, gathering and manipulating data, building models, and ultimately testing and evaluating them.</school><review_data_id>70015</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2015-02-05</review_date><review_value>7</review_value><review>Model Building and Validation is an advanced data science course provided by AT&amp;T through Udacity. The course is listed as "advanced" because it assumes prior knowledge of machine learning, statistics, linear algebra and calculus. Despite the stated prerequisites, math doesn't play a large role, so you will still be able to understand most of the content even if your only preparation is Udacity's intro to machine learning. The course spans 4 lessons that detail the process of extracting value from data through questioning, modeling and validation. Lesson 1 is a general introduction to the QMV process with each of the following lessons digging into each component of QMV in more detail. The course somewhat oversells its length as none of the lessons take more than a few hours despite the course being listed at an estimated 8 weeks with 6 hours of study per week. Model Building and Validation follows the same formula as other Udacity courses, with each lesson taking the form of a series of short lecture videos interspersed with quizzes. The lecturers are easy to understand and the video quality is generally good, although the videos and course materials have some glitches that need to be ironed out. I won't grade the course too harshly on bugs, since all courses are buggy at the very beginning, and they will likely be fixed in the near future. As for the content itself, the simple idea of framing a data analysis as a tree to track and organize the decisions you make along the way is probably the most useful thing you'll take away from this course. The course also does a good job getting students to think about some of the high-level decisions that must be made when conducting a data analysis. The content gets rockier when it delves into specifics after lesson 1, particularly in the models lesson. The lectures occasionally dive too quickly into the low level details of machine learning techniques that students may not have seen before. Additionally the validation section focuses much more on model evaluation metrics like ROC curves, the confusion matrix and derived metrics that fall out of it, than validation itself. Model Building and Validation is a good course that provides a nice framework for approaching data analysis, but it gets bogged down in some machine learning specifics that don't add much to the overarching theme.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>7039</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-02-14</review_date><review_value>8</review_value><review>Intro to data science is an intermediate level course that assumes basic Python programming skills and knowledge of statistics. The course focuses on gathering, manipulating, analyzing and visualizing data using Python and various Python packages such as numpy, scipy and pandas. One of the best parts about this course was getting some exposure to some Python packages in the scipy stack, although I wish more time was devoted to explaining what the various modules in the scipy stack do, how to set them up at home and when to use them. The first lesson is a fairly gentle introduction with an interesting homework project dealing with data from the Titanic disaster. Lesson 2 goes into more detail about gathering and cleaning data using Pandas and an additional module that lets you make SQL-lite queries to extract data from Pandas data frames. Lesson 3 jumps into data analysis with a T test and linear regression using gradient descent. Going from basic data manipulation into these topics was a bit jarring in terms of difficulty and more time could have been spent explaining how the functions worked. I left without a great appreciation of what gradient descent is really doing. Lesson 4 is focused on making visualizations using a module that attempts to port the functionality R language’s ggplot2 plotting package. Finally, lesson 5 introduces the concept of big data and MapReduce as a solution to deal with large data sets. Each homework assignment after the first has students dealing with New York subway turnstile data, which allows you to get some level of familiarity with the data throughout the course. This was a very good decision, since it lets you focus on learning new concepts rather than spending time familiarizing yourself with new data sets over and over again. Intro to data science introduces some major topics in data science and does a pretty good job given the amount of content it offers, but coverage of the topics is too brief. Hopefully the forthcoming Udacity courses Exploratory Data Analysis and Data Wrangling with MongoDB will build on the foundation provided by this course and give students a bit more depth.</review><helpful_rate>5</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>29025</review_data_id><reviewer_name>Tomas Kazemekas</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-04-15</review_date><review_value>10</review_value><review>As an intro to Data Science it was a good course. During the course we were given a principal overview of the emerging discipline of data science. The thing I liked about the course most was that the Python packages that were introduced and used for the assignments are really some of the most progressive ones available. Especially Pandas for data manipulation and ggplot for visualization. Overall the course provides good guidelines for further exploration of data science.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>118205</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2016-02-05</review_date><review_value>6</review_value><review>The course has 5 sections, each covering a major area of data science( Intro to Numpy/Pandas, data wrangling, data analysis, data visualization, and MapReduce. The course is pretty broad and is a good primer to take courses in each of the above topics. Since it covers so many topics, it has to do so at a broad level and thus what you learn in this course isn't enough to really understand data science. The sections themselves were kind of a mixed bag. Sections 1 &amp; 2 (The Intro. and data wrangling) were very well done. Good clear explanations, an example for each concept covered. Definitely a nice chunk of material squeezed into two lessons. However, after this, the course gets a bit more spotty. Section 3 (data analysis) was essentially divided into two parts - t-tests and regression with gradient descent. The t-test portion was pretty good. You definitely should be familiar with t-tests going in; but the review is brief but good. Only complaint was that certain tests were described but there were no Python exercises for them. The regression portion was not the best. The explanation of regression was passable if you just needed a quick refresher. The Python exercises were pretty bad. No Python explanation was given - just launched straight from the concept to "now you do a regression in Python." This is probably because the solutions they were going for were basically straight up writing the equations in Python and writing the numbers in (I'm sorry we are essentially using Python as a glorified calculator here). No built-in regression functions or anything - not practical at all. Gradient descent seemed very advanced for a course that was teaching t-tests 5 slides ago. Once again you were just expected to manually type out whole equation - the whole time I was thinking there was a SciPy stats function I forgot they covered. Section 4 on Visualization was okay as a very very brief intro to the topic. However there were only two coding exercises in the whole section and both were line charts. I feel like more info and exercises could have been added to beef up the section (lets at least learn to code bar charts, c'mon). As it stands now, it was not very useful from a programming standpoint. Section 5 was a very brief MapReduce intro. In my opinion, it was too brief and was significantly shorter than the other sections. Overall, if you are trying to get started in Data Science and NumPy/Pandas this is a decent first course. Just realize that you need to follow up with a course about each of the sections to really gain any sort of skillset or knowledge.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>75745</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-06-25</review_date><review_value>2</review_value><review>this course assumes more python knowledge than the intro to python class actually provides. do not assume that the "pre-reqs" will prepare you for this course, even if you are familiar with other programming languages. the quiz grader that is used in the course is horrible. it does not accept answers that are outlined as as answers in the videos, and it will often return a long list of bugs on code that runs perfectly in ipython. it's super buggy and makes the course painful.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>73542</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-03-17</review_date><review_value>4</review_value><review>I paid to do this course but asked for a refund. I didnt complete it. It was half good half incomplete. Often explanations were good, in other cases were vague and ambigious. I have to use the Machine Learning Courera course + other maths websites to understand what was going on in the Udacity Data Science linear regression. I do like Udacity I just felt this course needed much more robustness and better clearer explanations.. so many topic eg plotting charts were explained badly</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>61189</review_data_id><reviewer_name>brian c</reviewer_name><other_review_count>3</other_review_count><other_course_completed>3</other_course_completed><review_date>2014-12-10</review_date><review_value>5</review_value><review>The course starts off really great giving you the tools to use Pandas and a little exposure to SQL. The problem is that this course gives a high level overview of five different topics--sometimes these overviews have so much breadth they become pointless. I scratched the surface of data visualization, map reduce, and machine learning, but don't know nearly enough about these topics for them to be useful to me at all. There's a lot of good information in the course, but it fails because of its overly ambitious curriculum. Perhaps taking the courses about each topic would be better.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>12746</course_id><course_title>Intro to Data Science</course_title><school>The Introduction to Data Science class will survey the foundational topics in data science, namely: * Data Manipulation * Data Analysis with Statistics and Machine Learning * Data Communication with Information Visualization * Data at Scale -- Working with Big Data The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science. This course is also a part of our Data Analyst Nanodegree.</school><review_data_id>52704</review_data_id><reviewer_name>caroline m</reviewer_name><other_review_count>2</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-08-31</review_date><review_value>2</review_value><review/><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>7</course_id><course_title>Software Testing</course_title><school>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</school><review_data_id>6</review_data_id><reviewer_name>Jeanne Boyarsky</reviewer_name><other_review_count>33</other_review_count><other_course_completed>29</other_course_completed><review_date>2012-09-14</review_date><review_value>4</review_value><review>I signed up for this course because they talked about "competitions" where you could try to break your classmate's solution. This sounded fun and I was excited to see how Udacity would approach it. I was expecting something a bit like coursera's peer review system. What we got instead was: 1) A slow start covering the basics. (the basics were fine, but I already knew this) 2) The opportunity too review/break other's solutions in one giant forum thread. This was unusable, difficult to follow and lost my interest almost immediately. And it only happened once or twice. 3) The later lectures didn't have any embedded quizzes (and therefore interaction). I might as well have been watching a youtube video. 4) The course ended early fading to a whimper. It was almost like they ran out of material before the class was set to end.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>7</course_id><course_title>Software Testing</course_title><school>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</school><review_data_id>4589</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2013-12-17</review_date><review_value>6</review_value><review>This course is an overview of what software testing is and different testing methods. It focuses mainly on test coverage and random testing and the theory of testing in general. It doesn't provide much python-specific information outside of using assert statements to catch problems early. The material is a bit dry and it would have been nice if it covered python testing methods like unittest in detail in addition to the language-neutral testing techniques.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>7</course_id><course_title>Software Testing</course_title><school>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</school><review_data_id>913</review_data_id><reviewer_name>Roger Leyster</reviewer_name><other_review_count>10</other_review_count><other_course_completed>9</other_course_completed><review_date>2013-02-01</review_date><review_value>7</review_value><review>This course covers some of the basics of software testing including various types of coverage, regression testing, and fuzz/random testing. The problems were helpful, but sometimes the programs seemed to involve more programming than testing. The instructor is clearly most interested in random and fuzz testing, and that is the focus of the course. That's fine, but I would have liked to see somewhat less of random testing and more on other topics, e.g., mock objects. The video lectures are very well compressed, with pauses and repeats removed allowing one to get through the lectures efficiently (a few lectures had some editing mistakes where the same sentence was repeated three times in a row). If you want an introduction to testing with an emphasis on random testing, this is a good choice.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>7</course_id><course_title>Software Testing</course_title><school>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</school><review_data_id>436</review_data_id><reviewer_name>Marjan Ček</reviewer_name><other_review_count>20</other_review_count><other_course_completed>17</other_course_completed><review_date>2012-11-26</review_date><review_value>6</review_value><review>I dropped off around week three in favour of other more interesting courses. The lectures where not bad, and the assignments were in good correlation with what was explained, but the course failed to gain my interest. The overall content was rather bleak, and could have been explained in a one hour video. Perhaps if you don't even know what Unit Test means this course can be a good introduction to testing that goes down to fuzzy testing, which is theoretically a great idea, but in practice is very seldom used. I'm also not very satisfied with Udacity's interface, specially after using edX, but perhaps that's more of a personal choice.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>7</course_id><course_title>Software Testing</course_title><school>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</school><review_data_id>342</review_data_id><reviewer_name>Ivan Toit</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2012-11-07</review_date><review_value>7</review_value><review>The course focuses on automating testing. It does a good job covering the basics but does leave you thinking that there should have been more. That does not mean that this course is bad but it is not as thorough as some of the other courses.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>7</course_id><course_title>Software Testing</course_title><school>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</school><review_data_id>111</review_data_id><reviewer_name>Bharat Krishna</reviewer_name><other_review_count>5</other_review_count><other_course_completed>5</other_course_completed><review_date>2012-10-24</review_date><review_value>4</review_value><review>The course started with lots of promise but ended like a damp squib. The course was only 5 weeks rather than 6 weeks as advertised. The last 2 weeks did not have any in-video quizzes. On the positive side, I did learn quite a bit about fuzz testing &amp; random testing which I felt was useful.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>43363</course_id><course_title>Intro to Relational Databases</course_title><school>This course is a quick, fun introduction to using a relational database from your code, using examples in Python. You'll learn the basics of SQL (the Structured Query Language) and database design, as well as the Python API for connecting Python code to a database. You'll also learn a bit about protecting your database-backed web apps from common security problems. After taking this course, you'll be able to write code using a database as a backend to store application data reliably and safely.</school><review_data_id>111857</review_data_id><reviewer_name>Ramiro Aznar</reviewer_name><other_review_count>27</other_review_count><other_course_completed>26</other_course_completed><review_date>2015-08-23</review_date><review_value>6</review_value><review>I had to drop the course. The first two intro-theory modules are quite fundamental, but well instructed. The problem came up with the installation and setup of two softwares needed for the practical modules of the course. I could not find a way to solve my problem, neither in the forums or in the web.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>43363</course_id><course_title>Intro to Relational Databases</course_title><school>This course is a quick, fun introduction to using a relational database from your code, using examples in Python. You'll learn the basics of SQL (the Structured Query Language) and database design, as well as the Python API for connecting Python code to a database. You'll also learn a bit about protecting your database-backed web apps from common security problems. After taking this course, you'll be able to write code using a database as a backend to store application data reliably and safely.</school><review_data_id>70627</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2015-02-11</review_date><review_value>7</review_value><review>Intro to relational databases is a short 4 lesson course that covers the basics of SQL databases. Lessons 1 and 2 cover basic SQL querying, including grouping, ordering and inner joins, lesson 3 addresses inserts and concerns when using a database backend for a webapp and lesson 4 covers database design principles and a few more advanced features like outer joins and subqueries. I won't get into the final project as Udacity's projects tend to be geared toward students with subscriptions. Each lesson consist of several short videos with quizzes that involve multiple choice questions and coding exercises that revolve around altering and submitting SQL queries. The instructor is easy to understand and explains things well. The content is polished and I didn't notice any bugs, which is rare for a brand new course. On the other hand, the course is a bit too short and doesn't give beginners enough practice with newly introduced syntax before moving on. It would be helpful to give students a few short drills writing queries related to each newly introduced keyword from scratch. Also, to follow along with lesson 3, you have to download, install and interact with a virtual machine. The time necessary to download, install and figure out how to use the VM is probably more than is warranted with such a short course, although the VM may be used for other Udacity courses. Intro to relational databases is a succinct overview of SQL basics that serves as a nice refresher for someone who has seen SQL before, but making it a little longer and providing more simple drills would probably be helpful for beginners.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>27541</course_id><course_title>Intro to HTML and CSS</course_title><school>HTML and CSS are markup languages and the building blocks that make up the web. This course is called "Not your Typical Intro" because it does not follow the usual pattern of other courses and tutorials that you find on the Internet. Usually HTML and CSS are taught with a focus on language syntax. But knowing syntax alone does not enable you to create a webpage from a design. You need to know where to start and how to approach the task, in other words - you need to learn how to think like a front-end developer. In this course you will learn how to convert digital design mockups into static web pages. We will teach you how to approach page layout, how to break down a design mockup into page elements, and how to implement that in HTML and CSS. You will also learn about responsive design techniques, which are increasingly important in a world where mobile devices and TV screens are used more and more often to look for information and entertainment.</school><review_data_id>117889</review_data_id><reviewer_name>Lea</reviewer_name><other_review_count>3</other_review_count><other_course_completed>2</other_course_completed><review_date>2016-01-25</review_date><review_value>4</review_value><review>As someone who took this course after Programming Foundations with Python, I was disappointed in how scattered this course seemed in comparison. They do state in advance that this course will teach you HTML &amp; CSS differently, but unless your coming through with a decent amount of knowledge beforehand, they breeze through a lot of basic syntax and then jump right into more in-depth topics such as CSS Frameworks, Bootstrap, and using Developer tools. All of the concepts are great, but it's not really an 'Intro to HTML &amp; CSS' course. For those interested in learning the basics, I'd recommend John Duckett's HTML &amp; CSS book, or Codeacdemy's class. Those will give you a far more in-depth look into the basics.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>27541</course_id><course_title>Intro to HTML and CSS</course_title><school>HTML and CSS are markup languages and the building blocks that make up the web. This course is called "Not your Typical Intro" because it does not follow the usual pattern of other courses and tutorials that you find on the Internet. Usually HTML and CSS are taught with a focus on language syntax. But knowing syntax alone does not enable you to create a webpage from a design. You need to know where to start and how to approach the task, in other words - you need to learn how to think like a front-end developer. In this course you will learn how to convert digital design mockups into static web pages. We will teach you how to approach page layout, how to break down a design mockup into page elements, and how to implement that in HTML and CSS. You will also learn about responsive design techniques, which are increasingly important in a world where mobile devices and TV screens are used more and more often to look for information and entertainment.</school><review_data_id>58603</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-10-14</review_date><review_value>7</review_value><review>Intro to HTML and CSS is a 3-lesson primer on front-end web development and design. Although the name of the course suggests you'll learn HTML and CSS basics, the content is actually focused on higher level web development and design concepts like web page and project structure, responsive design and web frameworks. The course spends very little time talking about nuts and bolts like different HTML tags and CSS properties. The content itself is well done, it just strays a bit from what you'd expect given the title of the course. It should be entitled "Fundamentals of front-end web development/design" or something similar. This course is hard to rate given that the content is good, but it doesn't quite fulfill the expectations set by the title. As such, I'm subtracting 1 star from what is otherwise a nice, short intro to front end web development. If you want to learn HTML nuts and bolts, the first week of Udacity's "web development" spends a lot more time going over HTML tags. The HTML and CSS courses on Code Academy and Code School are also good options.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>35398</course_id><course_title>Real-Time Analytics with Apache Storm</course_title><school>The world is trending in real time! Learn from Twitter to scalably process tweets, or any big data stream, in real-time to drive d3 visualizations using Apache Storm, the “Hadoop of Real Time.” Storm is free, open source, and fun to use! Learn from Karthik Ramasamy, Technical Lead of Storm@Twitter, about the distributed, fault-tolerant, and flexible technology used to power Twitter’s real-time data flow pipeline. Twitter open sourced Storm in 2011, and it graduated to a top-level Apache project in September, 2014. Starting from basic distributed concepts presented during our first Udacity-Twitter Storm Hackathon, link Storm concepts to Storm syntax to scalably drive Word Cloud visualizations with Vagrant, Ubuntu, Maven, Flask, Redis, and d3. Link to the public Twitter gardenhose stream to process live tweets, parse embedded URLs, and calculate Top worldwide hashtags. Extend beyond Storm basics by exploring multi-language capabilities in Python, integrate open source components, and implement real-time streaming joins. In your final project, follow real-time trending topics by implementing the data pipeline to visualize only tweets that contain Top worldwide hashtags. Extend your project by exploring the Twitter API, or any data source, alongside Hackathon participants as they design their own ideas, receive feedback from Karthik, and open source a final project calculating real-time tweet sentiment and geolocation to drive a U.S. Map.</school><review_data_id>75703</review_data_id><reviewer_name>Rahul Lingala</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2015-06-20</review_date><review_value>6</review_value><review>The course is taught superficially. Content seemed to be interesting in the description using words like 'redis', 'flask' and others. But, All I know after taking up the course is just the meaning of them. Highly superficial course. I will definitely not recommend to take up this course. Could have been a beautiful course if taught in detail.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>20575</course_id><course_title>Developing Android Apps</course_title><school>As the first course in the Android Developer Nanodegree, Developing Android Apps is the foundation of our advanced Android curriculum. This course blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors step-by-step to build a cloud-connected Android app, and learn best practices of mobile development, and Android development in particular. ####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!</school><review_data_id>117177</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-12-29</review_date><review_value>2</review_value><review>Thank God I didn't pay for this course. As others have said, there is no education in this course. Google may have just pointed students at the Android website and told them to work it out for themselves - it would have been just as effective. The presenter suffers from a bad case of vocal fry which makes some of her words unclear. I am truly astrounded Google would use this course to introduce developers to Android. This course may be a violation of the the "Do no evil" mantra.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>20575</course_id><course_title>Developing Android Apps</course_title><school>As the first course in the Android Developer Nanodegree, Developing Android Apps is the foundation of our advanced Android curriculum. This course blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors step-by-step to build a cloud-connected Android app, and learn best practices of mobile development, and Android development in particular. ####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!</school><review_data_id>116957</review_data_id><reviewer_name>Mahesh Babu</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2015-12-21</review_date><review_value>2</review_value><review>Not Recommended ! This course is seems to design for those who already knew android and they have to revise stuffs. All things is explained just for 15-30 second .. and done you are on your own after that figure out wt you want to do next</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>20575</course_id><course_title>Developing Android Apps</course_title><school>As the first course in the Android Developer Nanodegree, Developing Android Apps is the foundation of our advanced Android curriculum. This course blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors step-by-step to build a cloud-connected Android app, and learn best practices of mobile development, and Android development in particular. ####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!</school><review_data_id>111881</review_data_id><reviewer_name>Dušan Jovanović</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2015-08-24</review_date><review_value>2</review_value><review>This course is one of the worst courses I was enrolled in. Format of the course is disastrous. Basically, for every lesson there is short intro, sometimes no longer than 30 seconds, then you were given a bunch of links to android docs, then you should figure out for yourself how to tweak code. After that, explanations are again no longer than 60 seconds, not explaining why you should implement that code? How that class works? Why you should create that method? Whole video lectures can be written on 2-3 pages of pdf document. Why bother with course!?</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>20575</course_id><course_title>Developing Android Apps</course_title><school>As the first course in the Android Developer Nanodegree, Developing Android Apps is the foundation of our advanced Android curriculum. This course blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors step-by-step to build a cloud-connected Android app, and learn best practices of mobile development, and Android development in particular. ####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!</school><review_data_id>52596</review_data_id><reviewer_name>Goran Goranovic</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2014-08-26</review_date><review_value>4</review_value><review>Ugh, where to start? This course is provided by Google who own Android, so it must be very good? Wrong! Creating something doesn't guarantee you'll be able to teach it to others. First 3 lessons of the course are very. They are mostly presented by Katherine. However, from lesson 4 things start to go downhill Dan Galpin takes over. "Lets move this here", "Lets refactor this" "...aaand we're done". I still have nightmares hearing these because the content was presented at such a speed that you HAVE TO pause videos every 2-3 seconds just to be able to understand what is going on. This is of course after you're not able to figure everything out on your own and have to see the solution. Instructor's explanation is that this course is a preparation for real life when you have to figure things on your own by searching API documentation and stackoverflow. I already know how to do this since I'm a professional programmer. What I wanted from the course is to learn how the best develop Android apps. This course won't give you that. You will be frustrated starting from lesson 4. If I knew how poor the rest of the course is, I wouldn't have started it. Can't recommend</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>20575</course_id><course_title>Developing Android Apps</course_title><school>As the first course in the Android Developer Nanodegree, Developing Android Apps is the foundation of our advanced Android curriculum. This course blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors step-by-step to build a cloud-connected Android app, and learn best practices of mobile development, and Android development in particular. ####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!</school><review_data_id>120187</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2016-04-09</review_date><review_value>4</review_value><review>I can't recommend this course. Everything is pretty accessible up until lesson 4 when they start getting into Content Providers and Loaders. It ends up being mountains of code that isn't very well explained. At that point, you don't know how anything is actually working or how it's useful to implement.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>20575</course_id><course_title>Developing Android Apps</course_title><school>As the first course in the Android Developer Nanodegree, Developing Android Apps is the foundation of our advanced Android curriculum. This course blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors step-by-step to build a cloud-connected Android app, and learn best practices of mobile development, and Android development in particular. ####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!</school><review_data_id>60924</review_data_id><reviewer_name>Ilya Rudyak</reviewer_name><other_review_count>6</other_review_count><other_course_completed>5</other_course_completed><review_date>2014-11-25</review_date><review_value>10</review_value><review>Overall this is one of the best courses on android development. But it's hard - so you better be prepared both to work and search for better approach to this course. Here are some details: * this course is mainly about networking and storage (especially content providers and loaders); but also includes some info about services and notifications; as well as some basic UI stuff including big screens and mock-ups; * it's not an easy course and I'd suggest you read some books beforehand (some suggestions mentioned below); * this course is build around an app development (a weather app) as many other android courses; probably this course is close to Yamba app from "Learning android" or RSS reader from Murach book. * recommendations and code are close to those you can find on official android site or in Reto's book; * this course is not ideal (put it mildly) from pedagogical point of view (especially the core parts) but you have really great Github repository with multiple branches so you always can find you way through it; and don't forget to read books and developers site (it's great);</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>29882</course_id><course_title>Data Visualization and D3.js</course_title><school>Learn the fundamentals of data visualization and practice communicating with data. This course covers how to apply design principles, human perception, color theory, and effective storytelling to data visualization. If you present data to others, aspire to be an analyst or data scientist, or if you’d like to become more technical with visualization tools, then you can grow your skills with this course. The course does not cover exploratory approaches to discover insights about data. Instead, the course focuses on how to visually encode and present data to an audience once an insight has been found. This course is part of the Data Analyst Nanodegree.</school><review_data_id>60642</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-11-25</review_date><review_value>6</review_value><review>Udacity's Data Visualization and D3.js is one of two new intermediate data science courses Udacity released this month (Nov 2014), the other being an introduction machine learning. This course consists of 4 lessons covering visualization and D3.js basics, design principles and dimple.js, narrative structures and interaction/animation. Each lesson spends some time discussing general visualization design principles and considerations followed by technical information such as combing through D3.js code. Since D3.js is a Javascript library, it is useful to have some exposure to Javascript, HTML and CSS before taking this course. Data Visualization with D3.js has the same polished and streamlined content structure as Udacity's other courses, with each lesson taking the form of a series of short videos interspersed with quizzes. The content focused on visualization design and principles is well done. On the other hand, the meat of the course--the sections focused on coding and creating visualizations-- were not as engaging as I'd hoped. D3.js is a low level Javascript library, so it takes a lot of code to generate graphs and a lot of time to explain the code and learn what it is doing. Too many videos consist of talking students through large chunks of somewhat cryptic code without much interactivity and it takes too long to get to the point where you make visualizations. I didn't feel like I was really learning how to make visualization myself so much as understanding bits and pieces of the instructor's code. The course doesn't give students enough opportunity and direction for writing D3.js code themselves: lessons 3 and 4 don't have problem sets. I think it was probably a mistake to use D3.js for such a short course. It might have been better to use a higher level visualization package that gets students making their own visualizations faster with less code. Data Visualization with D3.js is not a bad course and I could see other student liking more than I did, but after taking Udacity's excellent Exploratory Data Analysis course, it was a disappointment. In the EDA course, you jump in and start generating tons of plots in R and actually get to the point where you are reasonably comfortable using ggplot2 to make plots by the end. If are looking to learn D3.js specifically, this course could be a great starting point, but for learning data visualization in general, D3.js seemed to be more of a barrier to learning than an asset. I'd liken this course to an introductory programming course that uses C. Starting with a lower level language like C can be a bit painful and it takes longer to get to the point where you are doing interesting things--time you don't have in a 4 lesson course.</review><helpful_rate>4</helpful_rate></Course-Reivew><Course-Reivew><course_id>29882</course_id><course_title>Data Visualization and D3.js</course_title><school>Learn the fundamentals of data visualization and practice communicating with data. This course covers how to apply design principles, human perception, color theory, and effective storytelling to data visualization. If you present data to others, aspire to be an analyst or data scientist, or if you’d like to become more technical with visualization tools, then you can grow your skills with this course. The course does not cover exploratory approaches to discover insights about data. Instead, the course focuses on how to visually encode and present data to an audience once an insight has been found. This course is part of the Data Analyst Nanodegree.</school><review_data_id>74274</review_data_id><reviewer_name/><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2015-04-27</review_date><review_value>4</review_value><review>For starters, I have several years experience in data analysis. I took this course to pick up pointers on how presenting data has changed, and to learn some best practice approaches to communicating more complicated data driven messages. The content about visualization best practices is very good with adequate examples, however, that's where the course shine stops. The massive amount of external links that are referenced (some already broken) makes this feel like a narrated Google search as more than an organized course. As for D3.js content, I found the capability demonstration to be enlightening. I have a strong programming background, so seeing how the library works was moderately interesting, but it felt very out of place to be in this course. It was a distraction that felt somehow incomplete. The assessment questions were also poorly designed often requesting obscure verbatim citations from the material rather than generally checking that the key point of the lesson came across. Finally, I clearly understand that the course is D3.js inclusive, so I expected it to be part of the material. The teaching approach, however, wasn't engaging; it was too deep for a demo of capabilities and too shallow to pick up real skill with the library. I have completed several courses on Udacity, I consider this one to be one of the more painful and tedious to complete, while providing me only a limited amount of benefit. The material could use some work and leverage learning styles. The instructor could also loosen up so his commentary feels more natural. His speech feels forced and mechanical with popping "P's" and stressed syllables for ev-er-y word...which becomes difficult to endure for more than a short sitting.</review><helpful_rate>2</helpful_rate></Course-Reivew><Course-Reivew><course_id>3374</course_id><course_title>Mobile Web Development</course_title><school>So you’ve heard mobile is kind of a big deal, and you’re not sure how to transform your traditional desktop-focused web apps into fast, effective mobile experiences. This course is designed to teach web developers what they need to know to create great cross-device mobile web experiences. This course will focus on building mobile web apps, which will work across multiple platforms including Android, iOS, and others.</school><review_data_id>7199</review_data_id><reviewer_name>Matthias Faller</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2014-03-10</review_date><review_value>4</review_value><review>More an overview and a starting point for you own research in various topics of mobile web development. Course has unfixed bug not showing problem set completed. So course gets never completed. Problem sets consist of hacking an example page using Chrome Dev Tools. But this works not that good. Office hour session a quite boring.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>43362</course_id><course_title>Full Stack Foundations</course_title><school>In this course you will learn the fundamentals of back-end web development! You will create your own web application that queries a database for items on restaurant menus and then dynamically generates complete menus in the form of web pages and API endpoints. You’ll start by learning how to interact with a database from a web application using an Object-Relational Mapping (ORM) layer. From there, you’ll learn how GET and POST requests translate to CRUD operations. You’ll then explore the Flask framework and the various ways in which it can speed up the development of your applications. Finally, you’ll develop your very own web application from the ground up using the iterative development process.</school><review_data_id>73555</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2015-03-18</review_date><review_value>5</review_value><review>The course gives you the basics, but it is expected that you work through the coding exercises yourself and the course doesn't check if what you've done is right. Basically you just have to click on a button saying "Yes, I've done this". I much prefer the quiz style of other Udacity courses, where it is checked if your code is working as it should.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>51907</course_id><course_title>Deep Learning</course_title><school>**Machine learning** is one of the fastest-growing and most exciting fields out there, and **deep learning** represents its true bleeding edge. In this course, you’ll develop a clear understanding of the motivation for deep learning, and design intelligent systems that learn from complex and/or large-scale datasets. We’ll show you how to train and optimize basic neural networks, convolutional neural networks, and long short term memory networks. Complete learning systems in TensorFlow will be introduced via projects and assignments. You will learn to solve new classes of problems that were once thought prohibitively challenging, and come to better appreciate the complex nature of human intelligence as you solve these same problems effortlessly using deep learning methods. We have developed this course with Vincent Vanhoucke, Principal Scientist at Google, and technical lead in the Google Brain team. ***Note**: This is an intermediate to advanced level course offered as part of the [Machine Learning Engineer Nanodegree](https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009) program. It assumes you have taken a first course in machine learning, and that you are at least familiar with supervised learning methods.*</school><review_data_id>119274</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2016-03-11</review_date><review_value>4</review_value><review>Udacity's "Deep Learning" is a 4-lesson data science course built by Google that covers artificial neural networks. The first lesson builds up some machine learning background on classification problems, while lesson 2 discusses the basic machinery of neural networks and deep learning (neural networks with multiple layers.). Lesson 3 covers conventional networks for image recognition and lesson 4 covers recurrent networks and issues dealing with text data. This course assumes you have intermediate Python programming experience and basic knowledge of machine learning, statistics, linear algebra and calculus. Each lesson in the course consists of a series of short video lecture segments with occasional comprehension questions and breaks to apply topics discussed in programming assignments. The video quality itself is good and the lecture quality is adequate, but the lecture segments are very brief, with most lasting around a minute or less. The sum total of the video content in the third lesson on convents is less than 15 minutes. The programming assignments, which use a popular neural network library called TensorFlow, are lacking in instruction and involve either running large chunks of provided code or working on open-ended questions. You likely won't be able to make much progress on the assignments without prior knowledge of machine learning and TensorFlow or doing a lot of extra research outside of the course materials. The programming problems also require significant computing resources; my laptop with 8GB of RAM ran out of memory when running the provided code in the first assignment. Deep Learning is a shallow course that is akin to reading CliffsNotes instead of a textbook: you'll learn some terminology and be exposed to some interesting concepts but its abbreviated coverage is likely to confuse students who are new to neural networks while leaving more experienced students unsatisfied. This course seems like a rushed attempt to capitalize on the hottest buzzword in the hottest tech industry, which is a shame because it could have been a good course if it took the time to cover the topics in adequate detail. I give Deep Learning 2 out of 5 stars: Disappointing. *If you're interested in learning about the topics this course introduces in much more depth, check out the video lectures and course materials for CS231n, a deep learning course focused on image recognition offered by Stanford.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>49996</course_id><course_title>Designing RESTful APIs</course_title><school>no school</school><review_data_id>117352</review_data_id><reviewer_name>M GH</reviewer_name><other_review_count>2</other_review_count><other_course_completed>2</other_course_completed><review_date>2016-01-06</review_date><review_value>2</review_value><review>I was very excited when I started taking the class. Unfortunately, the materials were not good: - Some quizzes didn't have working code. - Some quizzes' starter code is already the solution. - Some videos have mistakes. - Some quizzes can't be solved without having previous exposure or really digging the documentation. - The readability of the code leaves a lot to be desired. Although the instructor is easy to understand, he gives the impression of being inexperienced. Somebody should have looked at the final result and not have let it go live in the current state. Even the discussion forum is dead. Udacity, if you are listening, do something about it. I have taken a handful of classes from you and you have delivered top education. Not this time. This class needs to be reworked!</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>2036</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-06-16</review_date><review_value>1</review_value><review>When I first heard that this topic was being offered on Udacity, I was really excited. Unfortunately, this course turned out to be very poor. I have a fair amount of prior programming experience, but whether you are a beginner or an advanced programmer there is nothing to learn from this class. First, the quizzes are not focused on any of the concepts presented in the lectures. All you are asked to do is to fill in some javascript that is tangential to the functioning of the game. Second, the six 'lectures' consist of 15 minutes of shoddily put together information sort of talking about the 'grits' game they made at google. The instructor just dances around gaming concepts and tells you to buy a $50 dollar piece of software for spritesheets when, for basic games, one does not need this level of sophistication for texturepackers and such. Third, there are no homeworks, so even if you complete the course, you actually have no idea how to make games, only how to do a little javascript if you didn't happen to know that already. All in all, this course was highly disappointing. I would, however, highly recommend Udacity's Web Development course, which is very, very well done. I appreciate Udacity working to make free educational material, but they should seriously consider removing the HTML5 course because it is damaging the brand. Sorry for being so harsh.</review><helpful_rate>6</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>2649</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-06-27</review_date><review_value>2</review_value><review>I would recommend avoiding this course until they bring it up to par. I am an experienced programmer, so I was expecting the difficulty to come from learning and applying the new concepts of HTML 5. Instead the difficulty comes from (1) No explanation of the concepts - basically assignments are just "do task A". You will likely need to spend hours on google or safari books searching and piecing together the concepts yourself BEFORE you can attempt the assignments (2) For assignments you are tasked to fill in a fragment of code in a library where you typically only see a piece of the library at a time (3) There is an interesting window that grades your code submissions, and it would be really cool if it always worked... There's more, but I'll leave it at this - logon to the course and read the comments in the course forums if you don't believe me. I am abandoning this class at least for now in favor of a good, straightforward HTML5 gaming book from Amazon.com</review><helpful_rate>3</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>3034</review_data_id><reviewer_name>Greg Hamel</reviewer_name><other_review_count>114</other_review_count><other_course_completed>105</other_course_completed><review_date>2014-05-04</review_date><review_value>2</review_value><review>This course is a perfect example that having smart instructors who are passionate about what they are doing is not enough to make for good instruction or a good class. Udacity's course offerings are generally top notch in quality, but this one seems to be the lemon of the lot. The course is structured around an HTML5 game that the profs created and quizzes are centered around having you fill in bits of code into a skeleton of hundreds of lines of their game code. The video lectures are too brief and don't discuss commands at a pace that allows students to learn what they are doing before taking quizzes expecting them to use those commands. Using an already-made game is a poor instruction decision. Building something from the ground up, piece by piece, over the course of a class is a much better system for learning that doesn't confuse students with tons of lines of unfamiliar code. The profs seem to assume that students should know much more than they actually would having watched the video lectures. Picture a bunch of scientists who are so wrapped up in their own world that they are unable to explain things in terms that a novice can understand. I love Ucadity, but this is one to avoid.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>2664</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-06-30</review_date><review_value>2</review_value><review>I have a degree in Game Design. This course is rough. Basically they take a bunch of pre-built libraries and have you insert a a few lines of Javascript code here and there to tie them all together. Without previous javascript and HTML5 knowledge, it is very unlikely one would be prepared to create their own unique game after completing this course. There are much better HTML5 game dev tutorials on the web, and Udacity should have partnered with those authors. The grader is also buggy unless you use chrome browser, which could be extremely confusing to novices who could think they are doing something wrong, when in fact the javascript is correct, but the auto grader is too limited to figure it out. All in all, an almost complete disappointment.</review><helpful_rate>1</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>119079</review_data_id><reviewer_name>Sylvain Leroux</reviewer_name><other_review_count>5</other_review_count><other_course_completed>4</other_course_completed><review_date>2016-03-04</review_date><review_value>2</review_value><review>This is the first course I took on Udacity ... and the first course I've ever dropped. *This* can't be representative or Udacity course quality !?! The premise of this course was to learn you how to develop a game using HTML5. I expected an extensive coverage of HTML5 canvas. And some discussion about event handling, audio and animation. And what about an introduction to HTML5 data storage solution or communication features ? But after a few disorganized videos it was clear the course was not about teaching you how to develop a game, but how to tweak an already existing game written by the instructors. And even that was a plain failure. We completely missed a high level overview of the application architecture (or even a simple link to download it!) The "assignments" were only distantly related to the material covered in the short videos. All exercises were focused on trivial editing of few JavaScript statements excerpt from hundreds of lines of code. And anyway, the grader didn't work at all... Yes this course was provided "for free". But in my dictionary, "free" isn't a synonym for "crap". Seriously this course makes a really bad publicity to Udacity. And it should be of best benefit for everyone to simply remove it from their catalog.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>117896</review_data_id><reviewer_name>Ryan Palmer</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2016-01-25</review_date><review_value>2</review_value><review>The course is extremely confusing. The syntax that the instructor uses is absolutely abysmal for example instead of a simple if statement they use a null check that returns, when no return is needed. Half of the code the video presents is a different abbreviation than the actual course quizzes, the way the quiz presents the information is all jumbled around instead of in one place. Half of the content isn't even shown they just tell you what to call instead of you making it yourself. If you are used to how JS is written for websites, and or codecademy DO NOT TAKE. However the reason the Instructor got 2 stars instead of 1 is that he told about Tiled and TexturePacker, two excellent programs I have never heard of before. Content is actually half a star.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>115138</review_data_id><reviewer_name/><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2015-11-04</review_date><review_value>2</review_value><review>I think the content might be nice, but the course is so broken that it is impossible to find out. You can't submit any of the exercises. Don't waste your valuable time with this one like I just did. You will only get frustrated.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>29027</review_data_id><reviewer_name>Y H</reviewer_name><other_review_count>1</other_review_count><other_course_completed>0</other_course_completed><review_date>2014-04-15</review_date><review_value>1</review_value><review>I have some experience on HTML5, CSS3, JavaScript and I was so excited to take this class to start learning to create a game, but this course is 1 of the horrible online classes I've ever taken. Even if you are experienced or not, I will never recommend this class. The instructor is passionate and fun but you will not practice coding much in this class, just fill out some part of pre- made layout of javascript, and even you did it, you will not really know how to start developing a game.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>3839</review_data_id><reviewer_name>Student</reviewer_name><other_review_count>anonymous</other_review_count><other_course_completed>anonymous</other_course_completed><review_date>2013-11-15</review_date><review_value>1</review_value><review>Quizzes ask for things not taught in lectures. Horrible lecture layout. "Crash course" is ridiculously useless.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>3288</review_data_id><reviewer_name>FlorianSchaetz</reviewer_name><other_review_count>1</other_review_count><other_course_completed>1</other_course_completed><review_date>2013-09-23</review_date><review_value>6</review_value><review>First of all: It's great topic, an introduction in many interesting aspects of HTML 5 / JavaScript development that can be used not only for games, but also in other areas: Canvas drawing, texture maps, Input Handling, Box2D, etc. But, unfortunately, the course has some major drawbacks: The quizzes are more often than not, simply buggy and require workarounds to be completed, searching through the forums is required here. Also, the course it not much more than an introduction into the topic. It shows some aspects, but you won't get deep into them. Without homework or a bigger project to tie everything together, it serves well as a short glimpse into the topic, a starting point, but not much more than that. The lectures are quite brief, giving the most important details, but also not much more than that. At the moment, there is also no possibility to really "finish" the course by taking some sort of exam. If you are already familiar with programming, don't mind so work your way around some bugs in the quizzes and want a simple introduction into the topic(s), then this course is worth a look, but it will still be a rough ride. Otherwise it's probably too frustrating, so I wouldn't recommend this course for beginners.</review><helpful_rate>0</helpful_rate></Course-Reivew><Course-Reivew><course_id>235</course_id><course_title>HTML5 Game Development</course_title><school>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</school><review_data_id>2932</review_data_id><reviewer_name>No one of consequence</reviewer_name><other_review_count>30</other_review_count><other_course_completed>18</other_course_completed><review_date>2013-10-07</review_date><review_value>3</review_value><review>I'm a big fan of Udacity's frequent in-class quizzes, but this course failed to supply all the necessary context to solve those quizzes. Sometimes even when I thought I had understood everything, my quiz answers inexplicably didn't work. Even when I tried to copy the instructor's solution exactly, it still didn't always work. I've programmed games before, so I wouldn't expect to have so much trouble. I did feel there was some useful material on XMLHttpRequests and parsing JSON data, but the class should really be re- tooled to develop those ideas more incrementally . Until the class is revamped, I doubt I will finish it.</review><helpful_rate>0</helpful_rate></Course-Reivew></ROOT>